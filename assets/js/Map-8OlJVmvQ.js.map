{"version":3,"file":"Map-8OlJVmvQ.js","sources":["../../../src/components/map/Map.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef, useMemo, memo } from \"react\";\nimport PropTypes from \"prop-types\";\nimport {\n  MapContainer,\n  TileLayer,\n  Marker,\n  Popup,\n  useMap,\n  ZoomControl,\n} from \"react-leaflet\";\nimport L from \"leaflet\";\nimport \"leaflet/dist/leaflet.css\";\nimport { useGeolocation } from \"../../contexts/GeolocationContext\";\nimport { isSecureContext } from \"../../services/geolocationService\";\n\n// Detect iOS for specific fixes\nL.Browser.safari = /^((?!chrome|android).)*safari/i.test(navigator.userAgent);\nL.Browser.iOS = /iPad|iPhone|iPod/.test(navigator.userAgent) || \n                (navigator.platform === 'MacIntel' && navigator.maxTouchPoints > 1);\n\n// Fix for default marker icons in react-leaflet\n// This is needed because the default markers use relative paths that don't work in React\ndelete L.Icon.Default.prototype._getIconUrl;\nL.Icon.Default.mergeOptions({\n  iconRetinaUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.9.4/images/marker-icon-2x.png',\n  iconUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.9.4/images/marker-icon.png',\n  shadowUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.9.4/images/marker-shadow.png',\n});\n\n// Custom lemonade stand marker icon\nconst createLemonadeIcon = () => {\n  // Get the base URL from the window location\n  const baseUrl = window.location.origin;\n  return new L.Icon({\n    iconUrl: `${baseUrl}/images/markers/lemonade-marker.svg`,\n    iconSize: [40, 48],\n    iconAnchor: [20, 48],\n    popupAnchor: [0, -48],\n  });\n};\n\n// Custom user location marker icon\nconst createUserLocationIcon = () => {\n  // Get the base URL from the window location\n  const baseUrl = window.location.origin;\n  return new L.Icon({\n    iconUrl: `${baseUrl}/images/markers/user-location.svg`,\n    iconSize: [24, 24],\n    iconAnchor: [12, 12],\n    popupAnchor: [0, -12],\n  });\n};\n\n// Component to handle map view updates and iOS-specific fixes\nconst MapViewUpdater = ({ center, zoom }) => {\n  const map = useMap();\n  const previousCenterRef = useRef(center);\n  const previousZoomRef = useRef(zoom);\n\n  useEffect(() => {\n    // Only update the view if center or zoom has changed significantly\n    // This prevents constant re-rendering when small GPS fluctuations occur\n    const centerChanged = center && (!previousCenterRef.current || \n      Math.abs(previousCenterRef.current[0] - center[0]) > 0.0005 || \n      Math.abs(previousCenterRef.current[1] - center[1]) > 0.0005);\n    \n    const zoomChanged = zoom !== previousZoomRef.current;\n    \n    if (centerChanged || zoomChanged) {\n      if (center) {\n        map.setView(center, zoom, { animate: true });\n        previousCenterRef.current = center;\n        previousZoomRef.current = zoom;\n      }\n    }\n    \n    // Apply iOS-specific fixes\n    if (L.Browser.iOS) {\n      // Fix for iOS Safari map rendering issues\n      setTimeout(() => {\n        map.invalidateSize();\n      }, 100);\n      \n      // Fix for iOS momentum scrolling issues\n      const container = map.getContainer();\n      container.addEventListener('touchstart', (e) => {\n        if (e.touches.length === 1) {\n          e.stopPropagation();\n        }\n      }, { passive: false });\n    }\n  }, [center, zoom, map]);\n\n  return null;\n};\n\nMapViewUpdater.propTypes = {\n  center: PropTypes.arrayOf(PropTypes.number),\n  zoom: PropTypes.number,\n};\n\n// Component to handle user location - memoized to prevent unnecessary re-renders\nconst UserLocationMarker = memo(({ showUserLocation, onUserLocationFound }) => {\n  const [position, setPosition] = useState(null);\n  const [accuracy, setAccuracy] = useState(null);\n  const map = useMap();\n  const locationCircleRef = useRef(null);\n  const lastNotifiedPositionRef = useRef(null);\n  const { location, getLocation } = useGeolocation();\n\n  // Memoize the icon creation\n  const icon = useMemo(() => createUserLocationIcon(), []);\n\n  // Update position when location changes from context\n  useEffect(() => {\n    if (location && showUserLocation) {\n      const latlng = { lat: location.lat, lng: location.lng };\n      setPosition([latlng.lat, latlng.lng]);\n      setAccuracy(location.accuracy || 0);\n\n      // Create or update accuracy circle\n      if (locationCircleRef.current) {\n        locationCircleRef.current.setLatLng(latlng);\n        locationCircleRef.current.setRadius(location.accuracy || 100);\n      } else {\n        locationCircleRef.current = L.circle(latlng, {\n          radius: location.accuracy || 100,\n          color: \"#4285F4\",\n          fillColor: \"#4285F4\",\n          fillOpacity: 0.1,\n          weight: 1,\n        }).addTo(map);\n      }\n    }\n  }, [location, map, showUserLocation]); // Use location instead of position to avoid circular dependency\n  \n  // Separate useEffect for notifying parent to prevent infinite loops\n  useEffect(() => {\n    if (position && onUserLocationFound && showUserLocation) {\n      // Only notify parent ONCE when position is first set\n      // This prevents continuous re-centering and re-zooming\n      const latlng = { lat: position[0], lng: position[1] };\n      \n      // Only notify if this is the first time we're getting a location\n      if (!lastNotifiedPositionRef.current) {\n        lastNotifiedPositionRef.current = latlng;\n        onUserLocationFound(latlng);\n      }\n      // We intentionally don't update on subsequent location changes\n      // This prevents the map from constantly re-centering\n    }\n  }, [position, showUserLocation, onUserLocationFound]);\n  \n  // Use Leaflet's locate method as a fallback - optimized to reduce unnecessary work\n  useEffect(() => {\n    if (!showUserLocation) {\n      if (locationCircleRef.current) {\n        locationCircleRef.current.remove();\n        locationCircleRef.current = null;\n      }\n      return;\n    }\n\n    // Check if we're in a secure context before trying to get location\n    if (!isSecureContext()) {\n      console.warn(\"Geolocation is not available in insecure contexts (non-HTTPS)\");\n      return;\n    }\n\n    // If we don't have a location from context, try to get it using Leaflet\n    if (!location) {\n      // Use a more efficient locate method for mobile\n      map.locate({\n        setView: true,\n        maxZoom: 16,\n        enableHighAccuracy: L.Browser.mobile, // Higher accuracy on mobile, especially for iOS\n        timeout: 15000, // Longer timeout for iOS\n        maximumAge: 30000, // Allow cached positions up to 30 seconds old\n        watch: L.Browser.mobile && L.Browser.safari, // Watch mode for iOS Safari\n      });\n\n      const onLocationFound = (e) => {\n        setPosition([e.latlng.lat, e.latlng.lng]);\n        setAccuracy(e.accuracy);\n\n        // Create or update accuracy circle\n        if (locationCircleRef.current) {\n          locationCircleRef.current.setLatLng(e.latlng);\n          locationCircleRef.current.setRadius(e.accuracy);\n        } else {\n          locationCircleRef.current = L.circle(e.latlng, {\n            radius: e.accuracy,\n            color: \"#4285F4\",\n            fillColor: \"#4285F4\",\n            fillOpacity: 0.1,\n            weight: 1,\n          }).addTo(map);\n        }\n\n        // We've moved the notification to a separate useEffect to prevent infinite loops\n      };\n\n      const onLocationError = (e) => {\n        console.error(\"Error getting location from Leaflet:\", e.message);\n        // Only try to get location using our geolocation service if we're in a secure context\n        if (isSecureContext()) {\n          getLocation();\n        }\n      };\n\n      map.on(\"locationfound\", onLocationFound);\n      map.on(\"locationerror\", onLocationError);\n\n      return () => {\n        map.off(\"locationfound\", onLocationFound);\n        map.off(\"locationerror\", onLocationError);\n      };\n    }\n\n    return () => {\n      if (locationCircleRef.current) {\n        locationCircleRef.current.remove();\n        locationCircleRef.current = null;\n      }\n    };\n  }, [map, showUserLocation, onUserLocationFound, location, getLocation]);\n\n  // Only render the marker if we have a position\n  return position ? (\n    <Marker position={position} icon={icon}>\n      <Popup>\n        <div>\n          <h3 className=\"font-display text-base\">Your Location</h3>\n          <p className=\"text-sm\">Accuracy: {Math.round(accuracy)} meters</p>\n        </div>\n      </Popup>\n    </Marker>\n  ) : null;\n});\n\nUserLocationMarker.propTypes = {\n  showUserLocation: PropTypes.bool,\n  onUserLocationFound: PropTypes.func,\n};\n\n// Memoized StandMarker component to prevent unnecessary re-renders\nconst StandMarker = memo(({ stand, onStandClick }) => {\n  // Memoize the icon creation\n  const icon = useMemo(() => createLemonadeIcon(), []);\n\n  return (\n    <Marker\n      key={stand.id}\n      position={[stand.location_lat, stand.location_lng]}\n      icon={icon}\n      eventHandlers={{\n        click: () => {\n          if (onStandClick) {\n            onStandClick(stand);\n          }\n        },\n      }}\n    >\n      <Popup>\n        <div className=\"text-center\">\n          <h3 className=\"font-display text-lg text-lemonade-yellow-dark\">\n            {stand.name}\n          </h3>\n          {stand.image_url && (\n            <img\n              src={stand.image_url}\n              alt={stand.name}\n              className=\"w-32 h-32 object-cover mx-auto my-2 rounded-lg\"\n              loading=\"lazy\" // Add lazy loading for images\n            />\n          )}\n          <p className=\"text-sm\">{stand.description}</p>\n          <p className=\"text-xs mt-2 text-gray-600\">{stand.address}</p>\n          <button\n            className=\"mt-2 px-3 py-1 bg-lemonade-yellow text-gray-800 rounded-full text-sm font-display hover:bg-lemonade-yellow-dark\"\n            onClick={(e) => {\n              e.stopPropagation();\n              if (onStandClick) {\n                onStandClick(stand);\n              }\n            }}\n          >\n            View Details\n          </button>\n        </div>\n      </Popup>\n    </Marker>\n  );\n});\n\nStandMarker.propTypes = {\n  stand: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    description: PropTypes.string,\n    location_lat: PropTypes.number.isRequired,\n    location_lng: PropTypes.number.isRequired,\n    address: PropTypes.string,\n    image_url: PropTypes.string,\n  }).isRequired,\n  onStandClick: PropTypes.func,\n};\n\n/**\n * Map component for displaying lemonade stands\n */\nconst Map = ({\n  stands = [],\n  center = [49.2827, 123.1207], // Default to Vancouver, BC\n  zoom = 13,\n  height = \"500px\",\n  showUserLocation = true,\n  onStandClick,\n  onUserLocationFound,\n  className = \"\",\n  children,\n  ...props\n}) => {\n  // Memoize the stands array to prevent unnecessary re-renders\n  const memoizedStands = useMemo(() => stands, [stands]);\n\n  return (\n    <div\n      className={`rounded-xl overflow-hidden shadow-playful lemonade-map-container ${className}`}\n      style={{ height }}\n      {...props}\n    >\n      <MapContainer\n        center={center}\n        zoom={zoom}\n        style={{ height: \"100%\", width: \"100%\" }}\n        zoomControl={false}\n        // Add performance optimizations for mobile\n        preferCanvas={true}\n        attributionControl={false}\n        minZoom={2}\n        maxZoom={50}\n        updateWhenZooming={false}\n        updateWhenIdle={true}\n        tap={true} // Enable tap for mobile\n        dragging={!L.Browser.mobile ? true : true} // Ensure dragging works on mobile\n        touchZoom={true} // Enable touch zoom for mobile\n        doubleClickZoom={true}\n        scrollWheelZoom={true}\n        keyboard={true}\n        bounceAtZoomLimits={false} // Prevent bounce effect at zoom limits on iOS\n        // iOS-specific fixes\n        tapTolerance={15} // Increase tap tolerance for iOS\n        wheelDebounceTime={100} // Debounce wheel events\n      >\n        <TileLayer\n          attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n        />\n\n        <ZoomControl position=\"bottomright\" />\n\n        {/* Update map view when center or zoom changes */}\n        <MapViewUpdater center={center} zoom={zoom} />\n\n        {/* Show user location if enabled */}\n        <UserLocationMarker\n          showUserLocation={showUserLocation}\n          onUserLocationFound={onUserLocationFound}\n        />\n\n        {/* Render lemonade stand markers */}\n        {memoizedStands.map((stand) => (\n          <StandMarker\n            key={stand.id}\n            stand={stand}\n            onStandClick={onStandClick}\n          />\n        ))}\n        \n        {/* Render children components (like DraggableMarker) */}\n        {children}\n      </MapContainer>\n    </div>\n  );\n};\n\nMap.propTypes = {\n  stands: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      description: PropTypes.string,\n      location_lat: PropTypes.number.isRequired,\n      location_lng: PropTypes.number.isRequired,\n      address: PropTypes.string,\n      image_url: PropTypes.string,\n    })\n  ),\n  center: PropTypes.arrayOf(PropTypes.number),\n  zoom: PropTypes.number,\n  height: PropTypes.string,\n  showUserLocation: PropTypes.bool,\n  onStandClick: PropTypes.func,\n  onUserLocationFound: PropTypes.func,\n  className: PropTypes.string,\n  children: PropTypes.node,\n};\n\nexport default Map;\n"],"names":["L","Browser","safari","test","navigator","userAgent","iOS","platform","maxTouchPoints","Icon","Default","prototype","_getIconUrl","mergeOptions","iconRetinaUrl","iconUrl","shadowUrl","MapViewUpdater","center","zoom","map","useMap","previousCenterRef","useRef","previousZoomRef","useEffect","centerChanged","current","Math","abs","zoomChanged","setView","animate","setTimeout","invalidateSize","getContainer","addEventListener","e","touches","length","stopPropagation","passive","propTypes","PropTypes","arrayOf","number","UserLocationMarker","memo","showUserLocation","onUserLocationFound","position","setPosition","useState","accuracy","setAccuracy","locationCircleRef","lastNotifiedPositionRef","location","getLocation","useGeolocation","icon","useMemo","baseUrl","window","origin","iconSize","iconAnchor","popupAnchor","createUserLocationIcon","latlng","lat","lng","setLatLng","setRadius","circle","radius","color","fillColor","fillOpacity","weight","addTo","isSecureContext","locate","maxZoom","enableHighAccuracy","mobile","timeout","maximumAge","watch","onLocationFound","onLocationError","on","off","remove","Marker","children","jsx","Popup","className","jsxs","round","bool","func","StandMarker","stand","onStandClick","createLemonadeIcon","jsxRuntimeExports","location_lat","location_lng","eventHandlers","click","name","image_url","src","alt","loading","description","address","onClick","id","shape","string","isRequired","Map","stands","height","props","memoizedStands","style","MapContainer","width","zoomControl","preferCanvas","attributionControl","minZoom","updateWhenZooming","updateWhenIdle","tap","dragging","touchZoom","doubleClickZoom","scrollWheelZoom","keyboard","bounceAtZoomLimits","tapTolerance","wheelDebounceTime","TileLayer","attribution","url","ZoomControl","node"],"mappings":"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"}