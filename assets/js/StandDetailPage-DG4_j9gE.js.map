{"version":3,"file":"StandDetailPage-DG4_j9gE.js","sources":["../../../src/components/stands/StandExpirationInfo.jsx","../../../src/components/stands/StandStatistics.jsx","../../../src/pages/StandDetailPage.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { extendStandExpiration } from '../../api/supabaseApi';\nimport { Button, Alert } from '../ui';\n\n/**\n * Component to display and manage stand expiration\n * @param {Object} props - Component props\n * @param {Object} props.stand - Stand data including expiration_time\n * @param {Function} props.onExtend - Callback function when stand is extended\n * @returns {JSX.Element} - Stand expiration info component\n */\nconst StandExpirationInfo = ({ stand, onExtend }) => {\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [success, setSuccess] = useState(null);\n  \n  // Calculate time remaining until expiration\n  const calculateTimeRemaining = () => {\n    if (!stand.expiration_time) return null;\n    \n    const now = new Date();\n    const expiration = new Date(stand.expiration_time);\n    const diffMs = expiration - now;\n    \n    // If already expired\n    if (diffMs <= 0) {\n      return { expired: true, timeString: 'Expired' };\n    }\n    \n    // Calculate hours and minutes remaining\n    const diffHrs = Math.floor(diffMs / (1000 * 60 * 60));\n    const diffMins = Math.floor((diffMs % (1000 * 60 * 60)) / (1000 * 60));\n    \n    let timeString = '';\n    if (diffHrs > 0) {\n      timeString += `${diffHrs} hour${diffHrs !== 1 ? 's' : ''}`;\n    }\n    if (diffMins > 0 || diffHrs === 0) {\n      if (diffHrs > 0) timeString += ' and ';\n      timeString += `${diffMins} minute${diffMins !== 1 ? 's' : ''}`;\n    }\n    \n    return { \n      expired: false, \n      timeString,\n      hours: diffHrs,\n      minutes: diffMins,\n      critical: diffHrs === 0 && diffMins < 30 // Less than 30 minutes remaining\n    };\n  };\n  \n  const timeRemaining = calculateTimeRemaining();\n  \n  // Handle extending the stand expiration\n  const handleExtend = async () => {\n    setLoading(true);\n    setError(null);\n    setSuccess(null);\n    \n    try {\n      const { data, error } = await extendStandExpiration(stand.id);\n      \n      if (error) {\n        throw new Error(error.message);\n      }\n      \n      setSuccess('Stand expiration extended successfully!');\n      \n      // Call the onExtend callback with the updated stand data\n      if (onExtend && data) {\n        onExtend(data[0]);\n      }\n    } catch (err) {\n      console.error('Error extending stand expiration:', err);\n      setError(err.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n  \n  // If no expiration time is set\n  if (!stand.expiration_time) {\n    return (\n      <div className=\"bg-yellow-50 border border-yellow-200 rounded-lg p-4 mb-4\">\n        <p className=\"text-yellow-800 mb-2\">\n          This stand does not have an expiration time set.\n        </p>\n        <Button\n          variant=\"secondary\"\n          onClick={handleExtend}\n          disabled={loading}\n          size=\"sm\"\n        >\n          {loading ? 'Setting expiration...' : 'Set 24-hour expiration'}\n        </Button>\n      </div>\n    );\n  }\n  \n  return (\n    <div className={`rounded-lg p-4 mb-4 ${\n      timeRemaining.expired \n        ? 'bg-red-50 border border-red-200' \n        : timeRemaining.critical\n          ? 'bg-orange-50 border border-orange-200'\n          : 'bg-blue-50 border border-blue-200'\n    }`}>\n      {error && (\n        <Alert \n          variant=\"error\" \n          className=\"mb-3\"\n          dismissible\n          onDismiss={() => setError(null)}\n        >\n          {error}\n        </Alert>\n      )}\n      \n      {success && (\n        <Alert \n          variant=\"success\" \n          className=\"mb-3\"\n          dismissible\n          onDismiss={() => setSuccess(null)}\n        >\n          {success}\n        </Alert>\n      )}\n      \n      <div className=\"flex flex-col md:flex-row justify-between items-start md:items-center\">\n        <div>\n          <h3 className={`font-medium ${\n            timeRemaining.expired \n              ? 'text-red-800' \n              : timeRemaining.critical\n                ? 'text-orange-800'\n                : 'text-blue-800'\n          }`}>\n            Stand Visibility Status\n          </h3>\n          \n          <p className={`${\n            timeRemaining.expired \n              ? 'text-red-600' \n              : timeRemaining.critical\n                ? 'text-orange-600'\n                : 'text-blue-600'\n          }`}>\n            {timeRemaining.expired \n              ? 'This stand has expired and is no longer visible to the public.' \n              : `Time remaining: ${timeRemaining.timeString}`\n            }\n          </p>\n          \n          {!timeRemaining.expired && (\n            <p className=\"text-gray-600 text-sm mt-1\">\n              Expires on: {new Date(stand.expiration_time).toLocaleString()}\n            </p>\n          )}\n        </div>\n        \n        <Button\n          variant={timeRemaining.expired ? \"primary\" : \"secondary\"}\n          onClick={handleExtend}\n          disabled={loading}\n          className=\"mt-3 md:mt-0\"\n        >\n          {loading \n            ? 'Extending...' \n            : timeRemaining.expired \n              ? 'Reactivate Stand' \n              : 'Extend by 24 Hours'\n          }\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default StandExpirationInfo;","import React from 'react';\nimport { Card } from '../ui';\n\n/**\n * Component to display stand visitor statistics\n * @param {Object} props - Component props\n * @param {Object} props.statistics - Statistics data\n * @returns {JSX.Element} - Stand statistics component\n */\nconst StandStatistics = ({ statistics }) => {\n  // If no statistics provided, use demo data\n  const stats = statistics || {\n    totalViews: Math.floor(Math.random() * 500),\n    uniqueVisitors: Math.floor(Math.random() * 200),\n    averageTimeSpent: Math.floor(Math.random() * 5) + 1,\n    popularTimes: [\n      { day: 'Monday', hour: '2-4 PM' },\n      { day: 'Wednesday', hour: '3-5 PM' },\n      { day: 'Saturday', hour: '12-2 PM' }\n    ],\n    viewsByDay: [\n      { day: 'Mon', views: Math.floor(Math.random() * 50) },\n      { day: 'Tue', views: Math.floor(Math.random() * 50) },\n      { day: 'Wed', views: Math.floor(Math.random() * 50) },\n      { day: 'Thu', views: Math.floor(Math.random() * 50) },\n      { day: 'Fri', views: Math.floor(Math.random() * 50) },\n      { day: 'Sat', views: Math.floor(Math.random() * 50) },\n      { day: 'Sun', views: Math.floor(Math.random() * 50) }\n    ]\n  };\n  \n  // Calculate max views for bar chart scaling\n  const maxViews = Math.max(...stats.viewsByDay.map(day => day.views));\n  \n  return (\n    <div>\n      <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6 mb-8\">\n        <div className=\"bg-blue-50 rounded-lg p-4 text-center\">\n          <h3 className=\"text-blue-800 text-lg mb-1\">Total Views</h3>\n          <p className=\"text-3xl font-bold text-blue-600\">{stats.totalViews}</p>\n        </div>\n        \n        <div className=\"bg-green-50 rounded-lg p-4 text-center\">\n          <h3 className=\"text-green-800 text-lg mb-1\">Unique Visitors</h3>\n          <p className=\"text-3xl font-bold text-green-600\">{stats.uniqueVisitors}</p>\n        </div>\n        \n        <div className=\"bg-purple-50 rounded-lg p-4 text-center\">\n          <h3 className=\"text-purple-800 text-lg mb-1\">Avg. Time (min)</h3>\n          <p className=\"text-3xl font-bold text-purple-600\">{stats.averageTimeSpent}</p>\n        </div>\n      </div>\n      \n      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6 mb-8\">\n        <Card>\n          <Card.Header>\n            <h3 className=\"text-xl font-display text-lemonade-blue-dark\">\n              Views by Day\n            </h3>\n          </Card.Header>\n          <Card.Body className=\"p-4\">\n            <div className=\"h-64 flex items-end justify-between\">\n              {stats.viewsByDay.map((day, index) => (\n                <div key={index} className=\"flex flex-col items-center\">\n                  <div \n                    className=\"w-8 bg-lemonade-blue rounded-t-md\" \n                    style={{ \n                      height: `${(day.views / maxViews) * 100}%`,\n                      minHeight: '10px'\n                    }}\n                  ></div>\n                  <span className=\"mt-2 text-sm text-gray-600\">{day.day}</span>\n                </div>\n              ))}\n            </div>\n          </Card.Body>\n        </Card>\n        \n        <Card>\n          <Card.Header>\n            <h3 className=\"text-xl font-display text-lemonade-blue-dark\">\n              Popular Times\n            </h3>\n          </Card.Header>\n          <Card.Body>\n            <ul className=\"divide-y divide-gray-200\">\n              {stats.popularTimes.map((time, index) => (\n                <li key={index} className=\"py-3 flex justify-between\">\n                  <span className=\"font-medium\">{time.day}</span>\n                  <span className=\"text-gray-600\">{time.hour}</span>\n                </li>\n              ))}\n            </ul>\n          </Card.Body>\n        </Card>\n      </div>\n      \n      <div className=\"p-4 bg-yellow-50 rounded-lg\">\n        <p className=\"text-yellow-800 text-sm\">\n          Note: These statistics are for demonstration purposes only. In a production environment, \n          this would be connected to real analytics data.\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default StandStatistics;","import React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate, Link } from 'react-router-dom';\nimport { useAuth } from '../contexts/AuthContext';\nimport { \n  getStandById, \n  updateStand, \n  deleteStand, \n  uploadStandImage,\n  getProducts,\n  createProduct,\n  updateProduct,\n  deleteProduct,\n  uploadProductImage\n} from '../api/supabaseApi';\nimport { StandExpirationInfo, StandStatistics } from '../components/stands';\nimport { Button, Alert, Form, Tabs, Modal, Card } from '../components/ui';\n\n/**\n * Stand Detail Page component for managing a specific stand\n * @returns {JSX.Element} - Stand Detail Page component\n */\nconst StandDetailPage = () => {\n  const { id } = useParams();\n  const navigate = useNavigate();\n  const { user } = useAuth();\n  \n  // State\n  const [stand, setStand] = useState(null);\n  const [products, setProducts] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [success, setSuccess] = useState(null);\n  const [activeTab, setActiveTab] = useState('details');\n  const [editMode, setEditMode] = useState(false);\n  const [formData, setFormData] = useState({\n    name: '',\n    description: '',\n    address: '',\n    location_lat: '',\n    location_lng: '',\n    is_active: true\n  });\n  const [imageFile, setImageFile] = useState(null);\n  const [imagePreview, setImagePreview] = useState(null);\n  const [uploadingImage, setUploadingImage] = useState(false);\n  const [showDeleteModal, setShowDeleteModal] = useState(false);\n  const [deleting, setDeleting] = useState(false);\n  const [visitorStats, setVisitorStats] = useState({\n    totalViews: Math.floor(Math.random() * 500), // Placeholder for demo\n    uniqueVisitors: Math.floor(Math.random() * 200), // Placeholder for demo\n    averageTimeSpent: Math.floor(Math.random() * 5) + 1, // Placeholder for demo\n    popularTimes: [\n      { day: 'Monday', hour: '2-4 PM' },\n      { day: 'Wednesday', hour: '3-5 PM' },\n      { day: 'Saturday', hour: '12-2 PM' }\n    ] // Placeholder for demo\n  });\n  \n  // Fetch stand data\n  useEffect(() => {\n    const fetchStandData = async () => {\n      try {\n        setLoading(true);\n        \n        // Fetch stand details\n        const { data: standData, error: standError } = await getStandById(id);\n        \n        if (standError) {\n          throw new Error(standError.message);\n        }\n        \n        if (!standData) {\n          throw new Error('Stand not found');\n        }\n        \n        // Check if user is the owner\n        if (standData.owner_id !== user.id) {\n          throw new Error('You do not have permission to view this stand');\n        }\n        \n        setStand(standData);\n        setFormData({\n          name: standData.name || '',\n          description: standData.description || '',\n          address: standData.address || '',\n          location_lat: standData.location_lat || '',\n          location_lng: standData.location_lng || '',\n          is_active: standData.is_active\n        });\n        \n        // Fetch products\n        const { data: productsData, error: productsError } = await getProducts(id);\n        \n        if (productsError) {\n          throw new Error(productsError.message);\n        }\n        \n        setProducts(productsData || []);\n      } catch (err) {\n        console.error('Error fetching stand data:', err);\n        setError(err.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    \n    fetchStandData();\n  }, [id, user.id]);\n  \n  // Handle form input change\n  const handleInputChange = (e) => {\n    const { name, value, type, checked } = e.target;\n    setFormData(prev => ({\n      ...prev,\n      [name]: type === 'checkbox' ? checked : value\n    }));\n  };\n  \n  // Handle image change\n  const handleImageChange = (e) => {\n    const file = e.target.files[0];\n    if (file) {\n      setImageFile(file);\n      \n      // Create preview\n      const reader = new FileReader();\n      reader.onloadend = () => {\n        setImagePreview(reader.result);\n      };\n      reader.readAsDataURL(file);\n    }\n  };\n  \n  // Handle form submission\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setLoading(true);\n    setError(null);\n    setSuccess(null);\n    \n    try {\n      // Update stand data\n      const { data, error } = await updateStand(id, formData);\n      \n      if (error) {\n        throw new Error(error.message);\n      }\n      \n      // Upload image if selected\n      if (imageFile) {\n        setUploadingImage(true);\n        const { error: uploadError } = await uploadStandImage(id, user.id, imageFile);\n        \n        if (uploadError) {\n          throw new Error(`Error uploading image: ${uploadError.message}`);\n        }\n        \n        // Refresh stand data to get updated image URL\n        const { data: refreshedData, error: refreshError } = await getStandById(id);\n        \n        if (refreshError) {\n          throw new Error(refreshError.message);\n        }\n        \n        setStand(refreshedData);\n      } else {\n        setStand(data[0]);\n      }\n      \n      setSuccess('Stand updated successfully!');\n      setEditMode(false);\n      setImageFile(null);\n      setImagePreview(null);\n    } catch (err) {\n      console.error('Error updating stand:', err);\n      setError(err.message);\n    } finally {\n      setLoading(false);\n      setUploadingImage(false);\n    }\n  };\n  \n  // Handle stand deletion\n  const handleDelete = async () => {\n    setDeleting(true);\n    \n    try {\n      const { error } = await deleteStand(id);\n      \n      if (error) {\n        throw new Error(error.message);\n      }\n      \n      // Redirect to dashboard\n      navigate('/seller/dashboard', { \n        state: { message: 'Stand deleted successfully!' } \n      });\n    } catch (err) {\n      console.error('Error deleting stand:', err);\n      setError(err.message);\n      setShowDeleteModal(false);\n    } finally {\n      setDeleting(false);\n    }\n  };\n  \n  // Handle stand activation/deactivation\n  const handleToggleActive = async () => {\n    setLoading(true);\n    setError(null);\n    setSuccess(null);\n    \n    try {\n      const newActiveState = !stand.is_active;\n      \n      const { data, error } = await updateStand(id, {\n        is_active: newActiveState\n      });\n      \n      if (error) {\n        throw new Error(error.message);\n      }\n      \n      setStand({\n        ...stand,\n        is_active: newActiveState\n      });\n      \n      setFormData(prev => ({\n        ...prev,\n        is_active: newActiveState\n      }));\n      \n      setSuccess(`Stand ${newActiveState ? 'activated' : 'deactivated'} successfully!`);\n    } catch (err) {\n      console.error('Error toggling stand active state:', err);\n      setError(err.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n  \n  // Handle stand expiration extension\n  const handleExtendExpiration = (updatedStand) => {\n    setStand(updatedStand);\n  };\n  \n  if (loading && !stand) {\n    return (\n      <div className=\"container mx-auto px-4 py-8\">\n        <div className=\"flex justify-center items-center h-64\">\n          <div className=\"animate-spin rounded-full h-12 w-12 border-t-2 border-b-2 border-lemonade-blue\"></div>\n        </div>\n      </div>\n    );\n  }\n  \n  if (error && !stand) {\n    return (\n      <div className=\"container mx-auto px-4 py-8\">\n        <Alert variant=\"error\" className=\"mb-4\">\n          {error}\n        </Alert>\n        <Link to=\"/seller/dashboard\">\n          <Button variant=\"secondary\">\n            Back to Dashboard\n          </Button>\n        </Link>\n      </div>\n    );\n  }\n  \n  return (\n    <div className=\"container mx-auto px-4 py-8\">\n      <div className=\"mb-6 flex flex-col md:flex-row justify-between items-start md:items-center\">\n        <div>\n          <Link to=\"/seller/dashboard\" className=\"text-lemonade-blue hover:underline mb-2 inline-block\">\n            ← Back to Dashboard\n          </Link>\n          <h1 className=\"text-3xl font-display text-lemonade-blue-dark\">\n            {stand.name}\n          </h1>\n        </div>\n        \n        <div className=\"flex space-x-2 mt-4 md:mt-0\">\n          <Button\n            variant={stand.is_active ? \"danger-outline\" : \"success\"}\n            onClick={handleToggleActive}\n            disabled={loading}\n          >\n            {stand.is_active ? 'Deactivate' : 'Activate'} Stand\n          </Button>\n          \n          <Button\n            variant=\"danger\"\n            onClick={() => setShowDeleteModal(true)}\n          >\n            Delete Stand\n          </Button>\n        </div>\n      </div>\n      \n      {error && (\n        <Alert \n          variant=\"error\" \n          className=\"mb-4\"\n          dismissible\n          onDismiss={() => setError(null)}\n        >\n          {error}\n        </Alert>\n      )}\n      \n      {success && (\n        <Alert \n          variant=\"success\" \n          className=\"mb-4\"\n          dismissible\n          onDismiss={() => setSuccess(null)}\n        >\n          {success}\n        </Alert>\n      )}\n      \n      {/* Stand expiration info */}\n      <StandExpirationInfo \n        stand={stand} \n        onExtend={handleExtendExpiration} \n      />\n      \n      {/* Tabs */}\n      <Tabs\n        activeTab={activeTab}\n        onChange={setActiveTab}\n        tabs={[\n          { id: 'details', label: 'Stand Details' },\n          { id: 'products', label: 'Products' },\n          { id: 'statistics', label: 'Visitor Statistics' }\n        ]}\n        className=\"mb-6\"\n      />\n      \n      {/* Stand Details Tab */}\n      {activeTab === 'details' && (\n        <div className=\"bg-white rounded-xl shadow-md p-6\">\n          {!editMode ? (\n            <>\n              <div className=\"flex justify-between items-center mb-6\">\n                <h2 className=\"text-2xl font-display text-lemonade-blue-dark\">\n                  Stand Details\n                </h2>\n                <Button\n                  variant=\"primary\"\n                  onClick={() => setEditMode(true)}\n                >\n                  Edit Details\n                </Button>\n              </div>\n              \n              <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\n                <div className=\"md:col-span-1\">\n                  <div className=\"rounded-lg overflow-hidden border border-gray-200\">\n                    {stand.image_url ? (\n                      <img \n                        src={stand.image_url} \n                        alt={stand.name} \n                        className=\"w-full h-64 object-cover\"\n                      />\n                    ) : (\n                      <div className=\"w-full h-64 bg-lemonade-yellow-light flex items-center justify-center\">\n                        <span className=\"text-lemonade-yellow-dark\">No Image</span>\n                      </div>\n                    )}\n                  </div>\n                </div>\n                \n                <div className=\"md:col-span-2\">\n                  <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                    <div>\n                      <h3 className=\"text-gray-500 text-sm\">Name</h3>\n                      <p className=\"text-gray-800 font-medium\">{stand.name}</p>\n                    </div>\n                    \n                    <div>\n                      <h3 className=\"text-gray-500 text-sm\">Status</h3>\n                      <span className={`px-2 py-1 rounded-full text-xs ${\n                        stand.is_active \n                          ? 'bg-green-100 text-green-800' \n                          : 'bg-gray-100 text-gray-800'\n                      }`}>\n                        {stand.is_active ? 'Active' : 'Inactive'}\n                      </span>\n                    </div>\n                    \n                    <div className=\"md:col-span-2\">\n                      <h3 className=\"text-gray-500 text-sm\">Description</h3>\n                      <p className=\"text-gray-800\">\n                        {stand.description || 'No description provided.'}\n                      </p>\n                    </div>\n                    \n                    <div className=\"md:col-span-2\">\n                      <h3 className=\"text-gray-500 text-sm\">Address</h3>\n                      <p className=\"text-gray-800\">\n                        {stand.address || 'No address provided.'}\n                      </p>\n                    </div>\n                    \n                    <div>\n                      <h3 className=\"text-gray-500 text-sm\">Latitude</h3>\n                      <p className=\"text-gray-800 font-mono\">\n                        {stand.location_lat || 'N/A'}\n                      </p>\n                    </div>\n                    \n                    <div>\n                      <h3 className=\"text-gray-500 text-sm\">Longitude</h3>\n                      <p className=\"text-gray-800 font-mono\">\n                        {stand.location_lng || 'N/A'}\n                      </p>\n                    </div>\n                    \n                    <div>\n                      <h3 className=\"text-gray-500 text-sm\">Created</h3>\n                      <p className=\"text-gray-800\">\n                        {new Date(stand.created_at).toLocaleDateString()}\n                      </p>\n                    </div>\n                    \n                    <div>\n                      <h3 className=\"text-gray-500 text-sm\">Last Updated</h3>\n                      <p className=\"text-gray-800\">\n                        {new Date(stand.updated_at).toLocaleDateString()}\n                      </p>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </>\n          ) : (\n            <>\n              <div className=\"flex justify-between items-center mb-6\">\n                <h2 className=\"text-2xl font-display text-lemonade-blue-dark\">\n                  Edit Stand Details\n                </h2>\n                <Button\n                  variant=\"secondary\"\n                  onClick={() => {\n                    setEditMode(false);\n                    setImageFile(null);\n                    setImagePreview(null);\n                    // Reset form data to current stand data\n                    setFormData({\n                      name: stand.name || '',\n                      description: stand.description || '',\n                      address: stand.address || '',\n                      location_lat: stand.location_lat || '',\n                      location_lng: stand.location_lng || '',\n                      is_active: stand.is_active\n                    });\n                  }}\n                >\n                  Cancel\n                </Button>\n              </div>\n              \n              <Form onSubmit={handleSubmit}>\n                <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\n                  <div className=\"md:col-span-1\">\n                    <div className=\"rounded-lg overflow-hidden border border-gray-200 mb-4\">\n                      {imagePreview ? (\n                        <img \n                          src={imagePreview} \n                          alt=\"Preview\" \n                          className=\"w-full h-64 object-cover\"\n                        />\n                      ) : stand.image_url ? (\n                        <img \n                          src={stand.image_url} \n                          alt={stand.name} \n                          className=\"w-full h-64 object-cover\"\n                        />\n                      ) : (\n                        <div className=\"w-full h-64 bg-lemonade-yellow-light flex items-center justify-center\">\n                          <span className=\"text-lemonade-yellow-dark\">No Image</span>\n                        </div>\n                      )}\n                    </div>\n                    \n                    <Form.Group>\n                      <Form.Label htmlFor=\"image\">Stand Image</Form.Label>\n                      <Form.Input\n                        id=\"image\"\n                        name=\"image\"\n                        type=\"file\"\n                        accept=\"image/*\"\n                        onChange={handleImageChange}\n                      />\n                      <Form.Text>\n                        Upload an image of your lemonade stand.\n                      </Form.Text>\n                    </Form.Group>\n                    \n                    <Form.Group>\n                      <div className=\"flex items-center\">\n                        <Form.Checkbox\n                          id=\"is_active\"\n                          name=\"is_active\"\n                          checked={formData.is_active}\n                          onChange={handleInputChange}\n                        />\n                        <Form.Label htmlFor=\"is_active\" className=\"ml-2 mb-0\">\n                          Stand is active\n                        </Form.Label>\n                      </div>\n                      <Form.Text>\n                        Inactive stands are not visible to the public.\n                      </Form.Text>\n                    </Form.Group>\n                  </div>\n                  \n                  <div className=\"md:col-span-2\">\n                    <Form.Group>\n                      <Form.Label htmlFor=\"name\" required>\n                        Stand Name\n                      </Form.Label>\n                      <Form.Input\n                        id=\"name\"\n                        name=\"name\"\n                        value={formData.name}\n                        onChange={handleInputChange}\n                        placeholder=\"Enter stand name\"\n                        required\n                      />\n                    </Form.Group>\n                    \n                    <Form.Group>\n                      <Form.Label htmlFor=\"description\">\n                        Description\n                      </Form.Label>\n                      <Form.Textarea\n                        id=\"description\"\n                        name=\"description\"\n                        value={formData.description}\n                        onChange={handleInputChange}\n                        placeholder=\"Describe your lemonade stand\"\n                        rows={4}\n                      />\n                    </Form.Group>\n                    \n                    <Form.Group>\n                      <Form.Label htmlFor=\"address\">\n                        Address\n                      </Form.Label>\n                      <Form.Input\n                        id=\"address\"\n                        name=\"address\"\n                        value={formData.address}\n                        onChange={handleInputChange}\n                        placeholder=\"Enter stand address\"\n                      />\n                    </Form.Group>\n                    \n                    <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                      <Form.Group>\n                        <Form.Label htmlFor=\"location_lat\">\n                          Latitude\n                        </Form.Label>\n                        <Form.Input\n                          id=\"location_lat\"\n                          name=\"location_lat\"\n                          type=\"number\"\n                          step=\"any\"\n                          value={formData.location_lat}\n                          onChange={handleInputChange}\n                          placeholder=\"Enter latitude\"\n                        />\n                      </Form.Group>\n                      \n                      <Form.Group>\n                        <Form.Label htmlFor=\"location_lng\">\n                          Longitude\n                        </Form.Label>\n                        <Form.Input\n                          id=\"location_lng\"\n                          name=\"location_lng\"\n                          type=\"number\"\n                          step=\"any\"\n                          value={formData.location_lng}\n                          onChange={handleInputChange}\n                          placeholder=\"Enter longitude\"\n                        />\n                      </Form.Group>\n                    </div>\n                  </div>\n                </div>\n                \n                <div className=\"flex justify-end mt-6\">\n                  <Button\n                    type=\"submit\"\n                    variant=\"primary\"\n                    disabled={loading || uploadingImage}\n                  >\n                    {loading || uploadingImage ? 'Saving...' : 'Save Changes'}\n                  </Button>\n                </div>\n              </Form>\n            </>\n          )}\n        </div>\n      )}\n      \n      {/* Products Tab */}\n      {activeTab === 'products' && (\n        <div className=\"bg-white rounded-xl shadow-md p-6\">\n          <div className=\"flex justify-between items-center mb-6\">\n            <h2 className=\"text-2xl font-display text-lemonade-blue-dark\">\n              Products\n            </h2>\n            <Link to={`/seller/stands/${id}/products/new`}>\n              <Button variant=\"primary\">\n                Add New Product\n              </Button>\n            </Link>\n          </div>\n          \n          {products.length === 0 ? (\n            <div className=\"text-center py-8 bg-gray-50 rounded-lg\">\n              <p className=\"text-gray-600 mb-4\">You don't have any products for this stand yet.</p>\n              <Link to={`/seller/stands/${id}/products/new`}>\n                <Button variant=\"primary\">\n                  Add Your First Product\n                </Button>\n              </Link>\n            </div>\n          ) : (\n            <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n              {products.map((product) => (\n                <Card key={product.id} className=\"hover:shadow-md transition\">\n                  <div className=\"h-48 bg-gray-100\">\n                    {product.image_url ? (\n                      <img \n                        src={product.image_url} \n                        alt={product.name} \n                        className=\"w-full h-full object-cover\"\n                      />\n                    ) : (\n                      <div className=\"w-full h-full bg-lemonade-yellow-light flex items-center justify-center\">\n                        <span className=\"text-lemonade-yellow-dark\">No Image</span>\n                      </div>\n                    )}\n                  </div>\n                  \n                  <Card.Body>\n                    <div className=\"flex justify-between items-start mb-2\">\n                      <h3 className=\"text-xl font-display text-lemonade-blue-dark\">\n                        {product.name}\n                      </h3>\n                      <span className=\"text-lg font-semibold text-lemonade-blue\">\n                        ${product.price.toFixed(2)}\n                      </span>\n                    </div>\n                    \n                    <p className=\"text-gray-600 mb-3 line-clamp-2\">\n                      {product.description || 'No description'}\n                    </p>\n                    \n                    <div className=\"flex justify-between items-center\">\n                      <span className={`px-2 py-1 rounded-full text-xs ${\n                        product.is_available \n                          ? 'bg-green-100 text-green-800' \n                          : 'bg-gray-100 text-gray-800'\n                      }`}>\n                        {product.is_available ? 'Available' : 'Unavailable'}\n                      </span>\n                      \n                      <Link \n                        to={`/seller/stands/${id}/products/${product.id}`}\n                        className=\"text-lemonade-blue hover:underline\"\n                      >\n                        Edit →\n                      </Link>\n                    </div>\n                  </Card.Body>\n                </Card>\n              ))}\n            </div>\n          )}\n        </div>\n      )}\n      \n      {/* Statistics Tab */}\n      {activeTab === 'statistics' && (\n        <div className=\"bg-white rounded-xl shadow-md p-6\">\n          <h2 className=\"text-2xl font-display text-lemonade-blue-dark mb-6\">\n            Visitor Statistics\n          </h2>\n          \n          <StandStatistics statistics={visitorStats} />\n        </div>\n      )}\n      \n      {/* Delete Confirmation Modal */}\n      <Modal\n        isOpen={showDeleteModal}\n        onClose={() => setShowDeleteModal(false)}\n        title=\"Delete Stand\"\n      >\n        <div className=\"p-6\">\n          <p className=\"text-gray-700 mb-6\">\n            Are you sure you want to delete this stand? This action cannot be undone.\n          </p>\n          \n          <div className=\"flex justify-end space-x-3\">\n            <Button\n              variant=\"secondary\"\n              onClick={() => setShowDeleteModal(false)}\n              disabled={deleting}\n            >\n              Cancel\n            </Button>\n            \n            <Button\n              variant=\"danger\"\n              onClick={handleDelete}\n              disabled={deleting}\n            >\n              {deleting ? 'Deleting...' : 'Delete Stand'}\n            </Button>\n          </div>\n        </div>\n      </Modal>\n    </div>\n  );\n};\n\nexport default StandDetailPage;"],"names":["StandExpirationInfo","stand","onExtend","loading","setLoading","useState","error","setError","success","setSuccess","timeRemaining","expiration_time","now","Date","diffMs","expired","timeString","diffHrs","Math","floor","diffMins","hours","minutes","critical","calculateTimeRemaining","handleExtend","async","data","extendStandExpiration","id","Error","message","err","jsxs","className","children","jsxRuntimeExports","jsx","Alert","variant","dismissible","onDismiss","toLocaleString","Button","onClick","disabled","size","StandStatistics","statistics","stats","totalViews","random","uniqueVisitors","averageTimeSpent","popularTimes","day","hour","viewsByDay","views","maxViews","max","map","Card","Header","Body","index","style","height","minHeight","time","StandDetailPage","useParams","navigate","useNavigate","user","useAuth","setStand","products","setProducts","activeTab","setActiveTab","editMode","setEditMode","formData","setFormData","name","description","address","location_lat","location_lng","is_active","imageFile","setImageFile","imagePreview","setImagePreview","uploadingImage","setUploadingImage","showDeleteModal","setShowDeleteModal","deleting","setDeleting","visitorStats","setVisitorStats","useEffect","standData","standError","getStandById","owner_id","productsData","productsError","getProducts","fetchStandData","handleInputChange","e","value","type","checked","target","prev","Link","to","newActiveState","updateStand","updatedStand","Tabs","onChange","tabs","label","Fragment","Form","onSubmit","preventDefault","uploadError","uploadStandImage","refreshedData","refreshError","src","alt","image_url","Group","Label","htmlFor","Input","accept","file","files","reader","FileReader","onloadend","result","readAsDataURL","Text","Checkbox","required","placeholder","Textarea","rows","step","created_at","toLocaleDateString","updated_at","length","product","price","toFixed","is_available","Modal","isOpen","onClose","title","deleteStand","state"],"mappings":"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"}