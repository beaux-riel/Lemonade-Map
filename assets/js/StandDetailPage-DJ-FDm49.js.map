{"version":3,"file":"StandDetailPage-DJ-FDm49.js","sources":["../../../src/components/stands/StandExpirationInfo.jsx","../../../src/components/stands/StandStatistics.jsx","../../../src/components/map/DraggableMarker.jsx","../../../src/pages/StandDetailPage.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { extendStandExpiration, reopenStand } from '../../api/supabaseApi';\nimport { Button, Alert } from '../ui';\n\n/**\n * Component to display and manage stand expiration\n * @param {Object} props - Component props\n * @param {Object} props.stand - Stand data including expiration_time\n * @param {Function} props.onExtend - Callback function when stand is extended\n * @returns {JSX.Element} - Stand expiration info component\n */\nconst StandExpirationInfo = ({ stand, onExtend }) => {\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [success, setSuccess] = useState(null);\n  const [timeRemaining, setTimeRemaining] = useState(null);\n  const timerRef = useRef(null);\n  \n  // Calculate time remaining until expiration\n  const calculateTimeRemaining = () => {\n    if (!stand.expiration_time) return null;\n    \n    const now = new Date();\n    const expiration = new Date(stand.expiration_time);\n    const diffMs = expiration - now;\n    \n    // If already expired\n    if (diffMs <= 0) {\n      return { expired: true, timeString: 'Expired' };\n    }\n    \n    // Calculate hours and minutes remaining\n    const diffHrs = Math.floor(diffMs / (1000 * 60 * 60));\n    const diffMins = Math.floor((diffMs % (1000 * 60 * 60)) / (1000 * 60));\n    const diffSecs = Math.floor((diffMs % (1000 * 60)) / 1000);\n    \n    let timeString = '';\n    if (diffHrs > 0) {\n      timeString += `${diffHrs} hour${diffHrs !== 1 ? 's' : ''}`;\n    }\n    if (diffMins > 0 || diffHrs === 0) {\n      if (diffHrs > 0) timeString += ' and ';\n      timeString += `${diffMins} minute${diffMins !== 1 ? 's' : ''}`;\n    }\n    if (diffHrs === 0 && diffMins === 0) {\n      timeString = `${diffSecs} second${diffSecs !== 1 ? 's' : ''}`;\n    }\n    \n    return { \n      expired: false, \n      timeString,\n      hours: diffHrs,\n      minutes: diffMins,\n      seconds: diffSecs,\n      critical: diffHrs === 0 && diffMins < 30 // Less than 30 minutes remaining\n    };\n  };\n  \n  // Update time remaining every second\n  useEffect(() => {\n    // Initial calculation\n    setTimeRemaining(calculateTimeRemaining());\n    \n    // Set up timer to update every second\n    timerRef.current = setInterval(() => {\n      const newTimeRemaining = calculateTimeRemaining();\n      setTimeRemaining(newTimeRemaining);\n      \n      // If expired, clear the interval\n      if (newTimeRemaining && newTimeRemaining.expired) {\n        clearInterval(timerRef.current);\n      }\n    }, 1000);\n    \n    // Clean up on unmount\n    return () => {\n      if (timerRef.current) {\n        clearInterval(timerRef.current);\n      }\n    };\n  }, [stand.expiration_time]);\n  \n  // Handle reopening an expired stand\n  const handleReopen = async () => {\n    setLoading(true);\n    setError(null);\n    setSuccess(null);\n    \n    try {\n      const { data, error } = await reopenStand(stand.id);\n      \n      if (error) {\n        throw new Error(error.message);\n      }\n      \n      const now = new Date();\n      const midnight = new Date(now);\n      midnight.setHours(23, 59, 59, 999);\n      \n      const hoursUntilMidnight = Math.round((midnight - now) / (1000 * 60 * 60));\n      \n      setSuccess(`Stand reopened successfully! Active for the next ${hoursUntilMidnight} hours (until midnight).`);\n      \n      // Call the onExtend callback with the updated stand data\n      if (onExtend && data) {\n        onExtend(data);\n      }\n    } catch (err) {\n      console.error('Error reopening stand:', err);\n      setError(err.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n  \n  // If no expiration time is set\n  if (!stand.expiration_time) {\n    return (\n      <div className=\"bg-yellow-50 border border-yellow-200 rounded-lg p-4 mb-4\">\n        <p className=\"text-yellow-800 mb-2\">\n          This stand does not have an expiration time set.\n        </p>\n        <Button\n          variant=\"secondary\"\n          onClick={handleReopen}\n          disabled={loading}\n          size=\"sm\"\n        >\n          {loading ? 'Setting expiration...' : 'Activate until midnight'}\n        </Button>\n      </div>\n    );\n  }\n  \n  // Format the expiration date to show date and time\n  const formatExpirationDate = (dateString) => {\n    const date = new Date(dateString);\n    return date.toLocaleString(undefined, {\n      weekday: 'short',\n      month: 'short', \n      day: 'numeric',\n      hour: 'numeric',\n      minute: 'numeric'\n    });\n  };\n  \n  // Calculate if the stand expires today\n  const expiresLaterToday = () => {\n    if (!stand.expiration_time) return false;\n    \n    const now = new Date();\n    const expiration = new Date(stand.expiration_time);\n    \n    return now.getDate() === expiration.getDate() && \n           now.getMonth() === expiration.getMonth() && \n           now.getFullYear() === expiration.getFullYear();\n  };\n  \n  return (\n    <div className={`rounded-lg p-4 mb-4 ${\n      timeRemaining.expired \n        ? 'bg-red-50 border border-red-200' \n        : timeRemaining.critical\n          ? 'bg-orange-50 border border-orange-200'\n          : 'bg-blue-50 border border-blue-200'\n    }`}>\n      {error && (\n        <Alert \n          variant=\"error\" \n          className=\"mb-3\"\n          dismissible\n          onDismiss={() => setError(null)}\n        >\n          {error}\n        </Alert>\n      )}\n      \n      {success && (\n        <Alert \n          variant=\"success\" \n          className=\"mb-3\"\n          dismissible\n          onDismiss={() => setSuccess(null)}\n        >\n          {success}\n        </Alert>\n      )}\n      \n      <div className=\"flex flex-col md:flex-row justify-between items-start md:items-center\">\n        <div>\n          <h3 className={`font-medium ${\n            timeRemaining.expired \n              ? 'text-red-800' \n              : timeRemaining.critical\n                ? 'text-orange-800'\n                : 'text-blue-800'\n          }`}>\n            Stand Visibility Status\n          </h3>\n          \n          {timeRemaining && timeRemaining.expired ? (\n            <p className=\"text-red-600\">\n              This stand has expired and is no longer visible to the public.\n            </p>\n          ) : (\n            <>\n              <div className={`flex items-center ${\n                timeRemaining && timeRemaining.critical\n                  ? 'text-orange-600'\n                  : 'text-blue-600'\n              }`}>\n                <span className=\"text-lg font-semibold mr-2\">Countdown:</span>\n                <div className=\"bg-white rounded-lg px-3 py-2 shadow-sm border border-gray-200\">\n                  <span className=\"font-mono text-lg\">\n                    {timeRemaining ? timeRemaining.timeString : 'Calculating...'}\n                  </span>\n                </div>\n              </div>\n              \n              <p className=\"text-gray-600 text-sm mt-2\">\n                {expiresLaterToday() \n                  ? `Expires tonight at midnight (${formatExpirationDate(stand.expiration_time)})` \n                  : `Expires at midnight: ${formatExpirationDate(stand.expiration_time)}`}\n              </p>\n            </>\n          )}\n        </div>\n        \n        <Button\n          variant={timeRemaining && timeRemaining.expired ? \"primary\" : \"secondary\"}\n          onClick={handleReopen}\n          disabled={loading}\n          className=\"mt-3 md:mt-0\"\n        >\n          {loading \n            ? 'Processing...' \n            : timeRemaining && timeRemaining.expired \n              ? 'Reopen Stand' \n              : expiresLaterToday()\n                ? 'Active Until Tonight'\n                : 'Active Until Midnight'\n          }\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default StandExpirationInfo;","import React from 'react';\nimport { Card } from '../ui';\n\n/**\n * Component to display stand visitor statistics\n * @param {Object} props - Component props\n * @param {Object} props.statistics - Statistics data\n * @returns {JSX.Element} - Stand statistics component\n */\nconst StandStatistics = ({ statistics }) => {\n  // If no statistics provided, use demo data\n  const stats = statistics || {\n    totalViews: Math.floor(Math.random() * 500),\n    uniqueVisitors: Math.floor(Math.random() * 200),\n    averageTimeSpent: Math.floor(Math.random() * 5) + 1,\n    popularTimes: [\n      { day: 'Monday', hour: '2-4 PM' },\n      { day: 'Wednesday', hour: '3-5 PM' },\n      { day: 'Saturday', hour: '12-2 PM' }\n    ],\n    viewsByDay: [\n      { day: 'Mon', views: Math.floor(Math.random() * 50) },\n      { day: 'Tue', views: Math.floor(Math.random() * 50) },\n      { day: 'Wed', views: Math.floor(Math.random() * 50) },\n      { day: 'Thu', views: Math.floor(Math.random() * 50) },\n      { day: 'Fri', views: Math.floor(Math.random() * 50) },\n      { day: 'Sat', views: Math.floor(Math.random() * 50) },\n      { day: 'Sun', views: Math.floor(Math.random() * 50) }\n    ]\n  };\n  \n  // Calculate max views for bar chart scaling\n  const maxViews = Math.max(...stats.viewsByDay.map(day => day.views));\n  \n  return (\n    <div>\n      <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6 mb-8\">\n        <div className=\"bg-blue-50 rounded-lg p-4 text-center\">\n          <h3 className=\"text-blue-800 text-lg mb-1\">Total Views</h3>\n          <p className=\"text-3xl font-bold text-blue-600\">{stats.totalViews}</p>\n        </div>\n        \n        <div className=\"bg-green-50 rounded-lg p-4 text-center\">\n          <h3 className=\"text-green-800 text-lg mb-1\">Unique Visitors</h3>\n          <p className=\"text-3xl font-bold text-green-600\">{stats.uniqueVisitors}</p>\n        </div>\n        \n        <div className=\"bg-purple-50 rounded-lg p-4 text-center\">\n          <h3 className=\"text-purple-800 text-lg mb-1\">Avg. Time (min)</h3>\n          <p className=\"text-3xl font-bold text-purple-600\">{stats.averageTimeSpent}</p>\n        </div>\n      </div>\n      \n      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6 mb-8\">\n        <Card>\n          <Card.Header>\n            <h3 className=\"text-xl font-display text-lemonade-blue-dark\">\n              Views by Day\n            </h3>\n          </Card.Header>\n          <Card.Body className=\"p-4\">\n            <div className=\"h-64 flex items-end justify-between\">\n              {stats.viewsByDay.map((day, index) => (\n                <div key={index} className=\"flex flex-col items-center\">\n                  <div \n                    className=\"w-8 bg-lemonade-blue rounded-t-md\" \n                    style={{ \n                      height: `${(day.views / maxViews) * 100}%`,\n                      minHeight: '10px'\n                    }}\n                  ></div>\n                  <span className=\"mt-2 text-sm text-gray-600\">{day.day}</span>\n                </div>\n              ))}\n            </div>\n          </Card.Body>\n        </Card>\n        \n        <Card>\n          <Card.Header>\n            <h3 className=\"text-xl font-display text-lemonade-blue-dark\">\n              Popular Times\n            </h3>\n          </Card.Header>\n          <Card.Body>\n            <ul className=\"divide-y divide-gray-200\">\n              {stats.popularTimes.map((time, index) => (\n                <li key={index} className=\"py-3 flex justify-between\">\n                  <span className=\"font-medium\">{time.day}</span>\n                  <span className=\"text-gray-600\">{time.hour}</span>\n                </li>\n              ))}\n            </ul>\n          </Card.Body>\n        </Card>\n      </div>\n      \n      <div className=\"p-4 bg-yellow-50 rounded-lg\">\n        <p className=\"text-yellow-800 text-sm\">\n          Note: These statistics are for demonstration purposes only. In a production environment, \n          this would be connected to real analytics data.\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default StandStatistics;","import React, { useRef, useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Marker, Popup, useMap } from 'react-leaflet';\nimport L from 'leaflet';\n\n/**\n * Custom draggable marker component for the map\n * Allows users to drag and drop a marker to set a location\n */\nconst DraggableMarker = ({ \n  position, \n  onPositionChange, \n  popupContent, \n  icon,\n  draggable = true\n}) => {\n  const markerRef = useRef(null);\n  const map = useMap();\n  const [markerPosition, setMarkerPosition] = useState(position);\n\n  // Update marker position when the position prop changes\n  useEffect(() => {\n    if (position && position[0] && position[1]) {\n      setMarkerPosition(position);\n    }\n  }, [position]);\n\n  // Handle marker drag events\n  const eventHandlers = {\n    dragend() {\n      const marker = markerRef.current;\n      if (marker) {\n        const newPosition = marker.getLatLng();\n        setMarkerPosition([newPosition.lat, newPosition.lng]);\n        if (onPositionChange) {\n          onPositionChange([newPosition.lat, newPosition.lng]);\n        }\n      }\n    },\n  };\n\n  // Center map on marker when it's created\n  useEffect(() => {\n    if (markerPosition && markerPosition[0] && markerPosition[1]) {\n      map.setView(markerPosition, map.getZoom());\n    }\n  }, []);\n\n  return (\n    <Marker\n      draggable={draggable}\n      eventHandlers={eventHandlers}\n      position={markerPosition}\n      ref={markerRef}\n      icon={icon}\n    >\n      {popupContent && (\n        <Popup>\n          {popupContent}\n        </Popup>\n      )}\n    </Marker>\n  );\n};\n\nDraggableMarker.propTypes = {\n  position: PropTypes.arrayOf(PropTypes.number).isRequired,\n  onPositionChange: PropTypes.func,\n  popupContent: PropTypes.node,\n  icon: PropTypes.instanceOf(L.Icon),\n  draggable: PropTypes.bool\n};\n\nexport default DraggableMarker;","import React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate, Link } from 'react-router-dom';\nimport { useAuth } from '../contexts/AuthContext';\nimport { \n  getStandById, \n  updateStand, \n  deleteStand, \n  uploadStandImage,\n  getProducts,\n  createProduct,\n  updateProduct,\n  deleteProduct,\n  uploadProductImage\n} from '../api/supabaseApi';\nimport { StandExpirationInfo, StandStatistics } from '../components/stands';\nimport { Button, Alert, Form, Tabs, Modal, Card, LoadingIndicator } from '../components/ui';\nimport Map from '../components/map/Map';\nimport DraggableMarker from '../components/map/DraggableMarker';\nimport logger from '../utils/logger';\n\n/**\n * Stand Detail Page component for managing a specific stand\n * @returns {JSX.Element} - Stand Detail Page component\n */\nconst StandDetailPage = () => {\n  const { id } = useParams();\n  const navigate = useNavigate();\n  const { user } = useAuth();\n  \n  // State\n  const [stand, setStand] = useState(null);\n  const [products, setProducts] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [success, setSuccess] = useState(null);\n  const [activeTab, setActiveTab] = useState('details');\n  const [editMode, setEditMode] = useState(false);\n  const [showLocationMap, setShowLocationMap] = useState(false);\n  const [mapCenter, setMapCenter] = useState(null);\n  const [formData, setFormData] = useState({\n    name: '',\n    description: '',\n    address: '',\n    location_lat: '',\n    location_lng: '',\n    is_active: true\n  });\n  const [imageFile, setImageFile] = useState(null);\n  const [imagePreview, setImagePreview] = useState(null);\n  const [uploadingImage, setUploadingImage] = useState(false);\n  const [showDeleteModal, setShowDeleteModal] = useState(false);\n  const [deleting, setDeleting] = useState(false);\n  const [visitorStats, setVisitorStats] = useState({\n    totalViews: Math.floor(Math.random() * 500), // Placeholder for demo\n    uniqueVisitors: Math.floor(Math.random() * 200), // Placeholder for demo\n    averageTimeSpent: Math.floor(Math.random() * 5) + 1, // Placeholder for demo\n    popularTimes: [\n      { day: 'Monday', hour: '2-4 PM' },\n      { day: 'Wednesday', hour: '3-5 PM' },\n      { day: 'Saturday', hour: '12-2 PM' }\n    ] // Placeholder for demo\n  });\n  \n  // Fetch stand data\n  useEffect(() => {\n    const fetchStandData = async () => {\n      try {\n        setLoading(true);\n        setError(null); // Clear any previous errors\n        logger.info('Fetching stand data', { standId: id });\n        \n        // Check if user is available\n        if (!user || !user.id) {\n          logger.error('Authentication error', new Error('User not available or missing ID'), { \n            standId: id, \n            userExists: !!user \n          });\n          throw new Error('Authentication error. Please try logging in again.');\n        }\n        \n        // Fetch stand details\n        logger.apiRequest(`stands/${id}`, 'GET');\n        const { data: standData, error: standError } = await getStandById(id);\n        \n        if (standError) {\n          logger.apiError(`stands/${id}`, 'GET', standError);\n          throw new Error(`Failed to load stand: ${standError.message}`);\n        }\n        \n        if (!standData) {\n          logger.warn('Stand not found', { standId: id });\n          throw new Error('Stand not found. It may have been deleted.');\n        }\n        \n        // Ensure standData is properly formatted\n        let formattedStandData = { ...standData };\n        \n        if (typeof formattedStandData.location_lat === 'string') {\n          formattedStandData.location_lat = parseFloat(formattedStandData.location_lat) || 0;\n        }\n        \n        if (typeof formattedStandData.location_lng === 'string') {\n          formattedStandData.location_lng = parseFloat(formattedStandData.location_lng) || 0;\n        }\n        \n        logger.apiResponse(`stands/${id}`, 'GET', { standExists: !!formattedStandData }, 200);\n        \n        // Check if user is the owner\n        if (formattedStandData.owner_id !== user.id) {\n          logger.warn('Permission denied', { \n            standId: id, \n            standOwnerId: formattedStandData.owner_id, \n            userId: user.id \n          });\n          throw new Error('You do not have permission to view this stand');\n        }\n        \n        logger.info('Stand data loaded successfully', { \n          standId: id, \n          standName: formattedStandData.name,\n          isActive: formattedStandData.is_active\n        });\n        \n        setStand(formattedStandData);\n        setFormData({\n          name: formattedStandData.name || '',\n          description: formattedStandData.description || '',\n          address: formattedStandData.address || '',\n          location_lat: formattedStandData.location_lat || '',\n          location_lng: formattedStandData.location_lng || '',\n          is_active: formattedStandData.is_active\n        });\n        \n        // Fetch products\n        logger.apiRequest(`products?standId=${id}`, 'GET');\n        const { data: productsData, error: productsError } = await getProducts(id);\n        \n        if (productsError) {\n          logger.apiError(`products?standId=${id}`, 'GET', productsError);\n          // Don't throw here, just log the error and continue with empty products\n          logger.warn('Failed to load products, continuing with empty products list', { \n            error: productsError.message \n          });\n          setProducts([]);\n        } else {\n          logger.apiResponse(`products?standId=${id}`, 'GET', { \n            productCount: productsData?.length || 0 \n          }, 200);\n          \n          setProducts(productsData || []);\n        }\n      } catch (err) {\n        logger.error('Error fetching stand data', err, { standId: id });\n        setError(err.message || 'Something went wrong. Please try again.');\n        setStand(null); // Clear stand data on error\n      } finally {\n        setLoading(false);\n      }\n    };\n    \n    // Only fetch data if user is available\n    if (user) {\n      fetchStandData();\n    } else {\n      logger.info('Waiting for user data before fetching stand', { standId: id });\n    }\n  }, [id, user]);\n  \n  // Handle form input change\n  const handleInputChange = (e) => {\n    const { name, value, type, checked } = e.target;\n    setFormData(prev => ({\n      ...prev,\n      [name]: type === 'checkbox' ? checked : value\n    }));\n  };\n  \n  // Handle image change\n  const handleImageChange = (e) => {\n    const file = e.target.files[0];\n    if (file) {\n      setImageFile(file);\n      \n      // Create preview\n      const reader = new FileReader();\n      reader.onloadend = () => {\n        setImagePreview(reader.result);\n      };\n      reader.readAsDataURL(file);\n    }\n  };\n  \n  // Handle form submission\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setLoading(true);\n    setError(null);\n    setSuccess(null);\n    \n    logger.info('Submitting stand update form', { \n      standId: id, \n      hasImageUpdate: !!imageFile \n    });\n    \n    try {\n      // Validate form data\n      if (!formData.name.trim()) {\n        throw new Error('Stand name is required');\n      }\n      \n      // Update stand data\n      logger.apiRequest(`stands/${id}`, 'PUT', { \n        formData: { ...formData, name: formData.name.trim() } \n      });\n      \n      const { data, error } = await updateStand(id, {\n        ...formData,\n        name: formData.name.trim()\n      });\n      \n      if (error) {\n        logger.apiError(`stands/${id}`, 'PUT', error);\n        throw new Error(`Failed to update stand: ${error.message}`);\n      }\n      \n      logger.apiResponse(`stands/${id}`, 'PUT', { success: true }, 200);\n      \n      // Upload image if selected\n      if (imageFile) {\n        setUploadingImage(true);\n        logger.info('Uploading stand image', { \n          standId: id, \n          imageSize: imageFile.size,\n          imageType: imageFile.type\n        });\n        \n        logger.apiRequest(`stands/${id}/image`, 'POST');\n        const { error: uploadError } = await uploadStandImage(id, user.id, imageFile);\n        \n        if (uploadError) {\n          logger.apiError(`stands/${id}/image`, 'POST', uploadError);\n          throw new Error(`Error uploading image: ${uploadError.message}`);\n        }\n        \n        logger.apiResponse(`stands/${id}/image`, 'POST', { success: true }, 200);\n        \n        // Refresh stand data to get updated image URL\n        logger.apiRequest(`stands/${id}`, 'GET');\n        const { data: refreshedData, error: refreshError } = await getStandById(id);\n        \n        if (refreshError) {\n          logger.apiError(`stands/${id}`, 'GET', refreshError);\n          throw new Error(`Error refreshing stand data: ${refreshError.message}`);\n        }\n        \n        logger.apiResponse(`stands/${id}`, 'GET', { success: true }, 200);\n        setStand(refreshedData);\n      } else {\n        setStand(data[0]);\n      }\n      \n      logger.info('Stand updated successfully', { standId: id });\n      setSuccess('Stand updated successfully!');\n      setEditMode(false);\n      setImageFile(null);\n      setImagePreview(null);\n    } catch (err) {\n      logger.error('Error updating stand', err, { standId: id });\n      setError(err.message);\n    } finally {\n      setLoading(false);\n      setUploadingImage(false);\n    }\n  };\n  \n  // Handle stand deletion\n  const handleDelete = async () => {\n    setDeleting(true);\n    setError(null);\n    \n    logger.info('Deleting stand', { standId: id });\n    \n    try {\n      // Confirm user is the owner before deletion\n      if (!stand || stand.owner_id !== user.id) {\n        logger.warn('Unauthorized deletion attempt', { \n          standId: id, \n          userId: user.id,\n          standOwnerId: stand?.owner_id\n        });\n        throw new Error('You do not have permission to delete this stand');\n      }\n      \n      logger.apiRequest(`stands/${id}`, 'DELETE');\n      const { error } = await deleteStand(id);\n      \n      if (error) {\n        logger.apiError(`stands/${id}`, 'DELETE', error);\n        throw new Error(`Failed to delete stand: ${error.message}`);\n      }\n      \n      logger.apiResponse(`stands/${id}`, 'DELETE', { success: true }, 200);\n      logger.info('Stand deleted successfully', { standId: id });\n      \n      // Redirect to dashboard\n      navigate('/seller/dashboard', { \n        state: { message: 'Stand deleted successfully!' } \n      });\n    } catch (err) {\n      logger.error('Error deleting stand', err, { standId: id });\n      setError(err.message);\n      setShowDeleteModal(false);\n    } finally {\n      setDeleting(false);\n    }\n  };\n  \n  // Handle stand activation/deactivation\n  const handleToggleActive = async () => {\n    setLoading(true);\n    setError(null);\n    setSuccess(null);\n    \n    const newActiveState = !stand.is_active;\n    const action = newActiveState ? 'activate' : 'deactivate';\n    \n    logger.info(`Attempting to ${action} stand`, { \n      standId: id, \n      currentState: stand.is_active,\n      newState: newActiveState\n    });\n    \n    try {\n      logger.apiRequest(`stands/${id}`, 'PATCH', { is_active: newActiveState });\n      \n      const { data, error } = await updateStand(id, {\n        is_active: newActiveState\n      });\n      \n      if (error) {\n        logger.apiError(`stands/${id}`, 'PATCH', error);\n        throw new Error(`Failed to ${action} stand: ${error.message}`);\n      }\n      \n      logger.apiResponse(`stands/${id}`, 'PATCH', { success: true }, 200);\n      logger.info(`Stand ${action}d successfully`, { standId: id });\n      \n      setStand({\n        ...stand,\n        is_active: newActiveState\n      });\n      \n      setFormData(prev => ({\n        ...prev,\n        is_active: newActiveState\n      }));\n      \n      setSuccess(`Stand ${newActiveState ? 'activated' : 'deactivated'} successfully!`);\n    } catch (err) {\n      logger.error(`Error ${action}ing stand`, err, { standId: id });\n      setError(err.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n  \n  // Handle stand expiration extension\n  const handleExtendExpiration = (updatedStand) => {\n    setStand(updatedStand);\n  };\n  \n  // Handle marker position change\n  const handleMarkerPositionChange = (newPosition) => {\n    setFormData(prev => ({\n      ...prev,\n      location_lat: newPosition[0],\n      location_lng: newPosition[1]\n    }));\n  };\n  \n  // Open location map modal\n  const openLocationMap = () => {\n    if (stand && stand.location_lat && stand.location_lng) {\n      setMapCenter([stand.location_lat, stand.location_lng]);\n    } else if (formData.location_lat && formData.location_lng) {\n      setMapCenter([parseFloat(formData.location_lat), parseFloat(formData.location_lng)]);\n    } else {\n      // Default to a central US location if no coordinates are available\n      setMapCenter([39.8283, -98.5795]);\n    }\n    setShowLocationMap(true);\n  };\n  \n  if (loading && !stand) {\n    return (\n      <div className=\"container mx-auto px-4 py-8\">\n        <div className=\"flex flex-col justify-center items-center h-64\">\n          <LoadingIndicator \n            size=\"lg\" \n            variant=\"blue\" \n            message=\"Loading stand details...\" \n          />\n        </div>\n      </div>\n    );\n  }\n  \n  if (error) {\n    return (\n      <div className=\"container mx-auto px-4 py-8\">\n        <div className=\"bg-white rounded-xl shadow-md p-6 mb-4\">\n          <h2 className=\"text-2xl font-display text-lemonade-blue-dark mb-4\">\n            Error Loading Stand\n          </h2>\n          <Alert \n            variant=\"error\" \n            className=\"mb-6\"\n            dismissible\n            onDismiss={() => setError(null)}\n          >\n            {error}\n          </Alert>\n          <p className=\"text-gray-600 mb-6\">\n            There was a problem loading the stand details. This could be due to:\n          </p>\n          <ul className=\"list-disc list-inside text-gray-600 mb-6\">\n            <li>The stand may have been deleted</li>\n            <li>You may not have permission to view this stand</li>\n            <li>There might be a temporary server issue</li>\n            <li>Your session may have expired</li>\n          </ul>\n          <div className=\"flex space-x-3\">\n            <Link to=\"/seller/dashboard\">\n              <Button variant=\"primary\">\n                Back to Dashboard\n              </Button>\n            </Link>\n            <Button \n              variant=\"secondary\"\n              onClick={() => window.location.reload()}\n            >\n              Try Again\n            </Button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n  \n  return (\n    <div className=\"container mx-auto px-4 py-8\">\n      <div className=\"mb-6 flex flex-col md:flex-row justify-between items-start md:items-center\">\n        <div>\n          <Link to=\"/seller/dashboard\" className=\"text-lemonade-blue hover:underline mb-2 inline-block\">\n            ← Back to Dashboard\n          </Link>\n          <h1 className=\"text-3xl font-display text-lemonade-blue-dark\">\n            {stand.name}\n          </h1>\n        </div>\n        \n        <div className=\"flex space-x-2 mt-4 md:mt-0\">\n          <Button\n            variant={stand.is_active ? \"danger-outline\" : \"success\"}\n            onClick={handleToggleActive}\n            disabled={loading}\n          >\n            {stand.is_active ? 'Deactivate' : 'Activate'} Stand\n          </Button>\n          \n          <Button\n            variant=\"danger\"\n            onClick={() => setShowDeleteModal(true)}\n          >\n            Delete Stand\n          </Button>\n        </div>\n      </div>\n      \n      {error && (\n        <Alert \n          variant=\"error\" \n          className=\"mb-4\"\n          dismissible\n          onDismiss={() => setError(null)}\n        >\n          {error}\n        </Alert>\n      )}\n      \n      {success && (\n        <Alert \n          variant=\"success\" \n          className=\"mb-4\"\n          dismissible\n          onDismiss={() => setSuccess(null)}\n        >\n          {success}\n        </Alert>\n      )}\n      \n      {/* Stand expiration info */}\n      <StandExpirationInfo \n        stand={stand} \n        onExtend={handleExtendExpiration} \n      />\n      \n      {/* Tabs */}\n      <Tabs\n        activeTab={activeTab}\n        onChange={setActiveTab}\n        tabs={[\n          { id: 'details', label: 'Stand Details' },\n          { id: 'products', label: 'Products' },\n          { id: 'statistics', label: 'Visitor Statistics' }\n        ]}\n        className=\"mb-6\"\n      />\n      \n      {/* Stand Details Tab */}\n      {activeTab === 'details' && (\n        <div className=\"bg-white rounded-xl shadow-md p-6\">\n          {!editMode ? (\n            <>\n              <div className=\"flex justify-between items-center mb-6\">\n                <h2 className=\"text-2xl font-display text-lemonade-blue-dark\">\n                  Stand Details\n                </h2>\n                <Button\n                  variant=\"primary\"\n                  onClick={() => setEditMode(true)}\n                >\n                  Edit Details\n                </Button>\n              </div>\n              \n              <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\n                <div className=\"md:col-span-1\">\n                  <div className=\"rounded-lg overflow-hidden border border-gray-200\">\n                    {stand.image_url ? (\n                      <img \n                        src={stand.image_url} \n                        alt={stand.name} \n                        className=\"w-full h-64 object-cover\"\n                      />\n                    ) : (\n                      <div className=\"w-full h-64 bg-lemonade-yellow-light flex items-center justify-center\">\n                        <span className=\"text-lemonade-yellow-dark\">No Image</span>\n                      </div>\n                    )}\n                  </div>\n                </div>\n                \n                <div className=\"md:col-span-2\">\n                  <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                    <div>\n                      <h3 className=\"text-gray-500 text-sm\">Name</h3>\n                      <p className=\"text-gray-800 font-medium\">{stand.name}</p>\n                    </div>\n                    \n                    <div>\n                      <h3 className=\"text-gray-500 text-sm\">Status</h3>\n                      <span className={`px-2 py-1 rounded-full text-xs ${\n                        stand.is_active \n                          ? 'bg-green-100 text-green-800' \n                          : 'bg-gray-100 text-gray-800'\n                      }`}>\n                        {stand.is_active ? 'Active' : 'Inactive'}\n                      </span>\n                    </div>\n                    \n                    <div className=\"md:col-span-2\">\n                      <h3 className=\"text-gray-500 text-sm\">Description</h3>\n                      <p className=\"text-gray-800\">\n                        {stand.description || 'No description provided.'}\n                      </p>\n                    </div>\n                    \n                    <div className=\"md:col-span-2\">\n                      <h3 className=\"text-gray-500 text-sm\">Address</h3>\n                      <p className=\"text-gray-800\">\n                        {stand.address || 'No address provided.'}\n                      </p>\n                    </div>\n                    \n                    <div>\n                      <h3 className=\"text-gray-500 text-sm\">Latitude</h3>\n                      <p className=\"text-gray-800 font-mono\">\n                        {stand.location_lat || 'N/A'}\n                      </p>\n                    </div>\n                    \n                    <div>\n                      <h3 className=\"text-gray-500 text-sm\">Longitude</h3>\n                      <p className=\"text-gray-800 font-mono\">\n                        {stand.location_lng || 'N/A'}\n                      </p>\n                    </div>\n                    \n                    <div>\n                      <h3 className=\"text-gray-500 text-sm\">Created</h3>\n                      <p className=\"text-gray-800\">\n                        {new Date(stand.created_at).toLocaleDateString()}\n                      </p>\n                    </div>\n                    \n                    <div>\n                      <h3 className=\"text-gray-500 text-sm\">Last Updated</h3>\n                      <p className=\"text-gray-800\">\n                        {new Date(stand.updated_at).toLocaleDateString()}\n                      </p>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </>\n          ) : (\n            <>\n              <div className=\"flex justify-between items-center mb-6\">\n                <h2 className=\"text-2xl font-display text-lemonade-blue-dark\">\n                  Edit Stand Details\n                </h2>\n                <Button\n                  variant=\"secondary\"\n                  onClick={() => {\n                    setEditMode(false);\n                    setImageFile(null);\n                    setImagePreview(null);\n                    // Reset form data to current stand data\n                    setFormData({\n                      name: stand.name || '',\n                      description: stand.description || '',\n                      address: stand.address || '',\n                      location_lat: stand.location_lat || '',\n                      location_lng: stand.location_lng || '',\n                      is_active: stand.is_active\n                    });\n                  }}\n                >\n                  Cancel\n                </Button>\n              </div>\n              \n              <Form onSubmit={handleSubmit}>\n                <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\n                  <div className=\"md:col-span-1\">\n                    <div className=\"rounded-lg overflow-hidden border border-gray-200 mb-4\">\n                      {imagePreview ? (\n                        <img \n                          src={imagePreview} \n                          alt=\"Preview\" \n                          className=\"w-full h-64 object-cover\"\n                        />\n                      ) : stand.image_url ? (\n                        <img \n                          src={stand.image_url} \n                          alt={stand.name} \n                          className=\"w-full h-64 object-cover\"\n                        />\n                      ) : (\n                        <div className=\"w-full h-64 bg-lemonade-yellow-light flex items-center justify-center\">\n                          <span className=\"text-lemonade-yellow-dark\">No Image</span>\n                        </div>\n                      )}\n                    </div>\n                    \n                    <Form.Group>\n                      <Form.Label htmlFor=\"image\">Stand Image</Form.Label>\n                      <Form.Input\n                        id=\"image\"\n                        name=\"image\"\n                        type=\"file\"\n                        accept=\"image/*\"\n                        onChange={handleImageChange}\n                      />\n                      <Form.Text>\n                        Upload an image of your lemonade stand.\n                      </Form.Text>\n                    </Form.Group>\n                    \n                    <Form.Group>\n                      <div className=\"flex items-center\">\n                        <Form.Checkbox\n                          id=\"is_active\"\n                          name=\"is_active\"\n                          checked={formData.is_active}\n                          onChange={handleInputChange}\n                        />\n                        <Form.Label htmlFor=\"is_active\" className=\"ml-2 mb-0\">\n                          Stand is active\n                        </Form.Label>\n                      </div>\n                      <Form.Text>\n                        Inactive stands are not visible to the public.\n                      </Form.Text>\n                    </Form.Group>\n                  </div>\n                  \n                  <div className=\"md:col-span-2\">\n                    <Form.Group>\n                      <Form.Label htmlFor=\"name\" required>\n                        Stand Name\n                      </Form.Label>\n                      <Form.Input\n                        id=\"name\"\n                        name=\"name\"\n                        value={formData.name}\n                        onChange={handleInputChange}\n                        placeholder=\"Enter stand name\"\n                        required\n                      />\n                    </Form.Group>\n                    \n                    <Form.Group>\n                      <Form.Label htmlFor=\"description\">\n                        Description\n                      </Form.Label>\n                      <Form.Textarea\n                        id=\"description\"\n                        name=\"description\"\n                        value={formData.description}\n                        onChange={handleInputChange}\n                        placeholder=\"Describe your lemonade stand\"\n                        rows={4}\n                      />\n                    </Form.Group>\n                    \n                    <Form.Group>\n                      <Form.Label htmlFor=\"address\">\n                        Address\n                      </Form.Label>\n                      <Form.Input\n                        id=\"address\"\n                        name=\"address\"\n                        value={formData.address}\n                        onChange={handleInputChange}\n                        placeholder=\"Enter stand address\"\n                      />\n                    </Form.Group>\n                    \n                    <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                      <Form.Group>\n                        <Form.Label htmlFor=\"location_lat\">\n                          Latitude\n                        </Form.Label>\n                        <Form.Input\n                          id=\"location_lat\"\n                          name=\"location_lat\"\n                          type=\"number\"\n                          step=\"any\"\n                          value={formData.location_lat}\n                          onChange={handleInputChange}\n                          placeholder=\"Enter latitude\"\n                        />\n                      </Form.Group>\n                      \n                      <Form.Group>\n                        <Form.Label htmlFor=\"location_lng\">\n                          Longitude\n                        </Form.Label>\n                        <Form.Input\n                          id=\"location_lng\"\n                          name=\"location_lng\"\n                          type=\"number\"\n                          step=\"any\"\n                          value={formData.location_lng}\n                          onChange={handleInputChange}\n                          placeholder=\"Enter longitude\"\n                        />\n                      </Form.Group>\n                    </div>\n                    \n                    <div className=\"mt-4\">\n                      <Button\n                        type=\"button\"\n                        variant=\"secondary\"\n                        onClick={openLocationMap}\n                        className=\"w-full flex items-center justify-center\"\n                      >\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5 mr-2\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                          <path fillRule=\"evenodd\" d=\"M5.05 4.05a7 7 0 119.9 9.9L10 18.9l-4.95-4.95a7 7 0 010-9.9zM10 11a2 2 0 100-4 2 2 0 000 4z\" clipRule=\"evenodd\" />\n                        </svg>\n                        Set Location on Map (Drag & Drop)\n                      </Button>\n                    </div>\n                  </div>\n                </div>\n                \n                <div className=\"flex justify-end mt-6\">\n                  <Button\n                    type=\"submit\"\n                    variant=\"primary\"\n                    disabled={loading || uploadingImage}\n                  >\n                    {loading || uploadingImage ? 'Saving...' : 'Save Changes'}\n                  </Button>\n                </div>\n              </Form>\n            </>\n          )}\n        </div>\n      )}\n      \n      {/* Products Tab */}\n      {activeTab === 'products' && (\n        <div className=\"bg-white rounded-xl shadow-md p-6\">\n          <div className=\"flex justify-between items-center mb-6\">\n            <h2 className=\"text-2xl font-display text-lemonade-blue-dark\">\n              Products\n            </h2>\n            <Link to={`/seller/stands/${id}/products/new`}>\n              <Button variant=\"primary\">\n                Add New Product\n              </Button>\n            </Link>\n          </div>\n          \n          {products.length === 0 ? (\n            <div className=\"text-center py-8 bg-gray-50 rounded-lg\">\n              <p className=\"text-gray-600 mb-4\">You don't have any products for this stand yet.</p>\n              <Link to={`/seller/stands/${id}/products/new`}>\n                <Button variant=\"primary\">\n                  Add Your First Product\n                </Button>\n              </Link>\n            </div>\n          ) : (\n            <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n              {products.map((product) => (\n                <Card key={product.id} className=\"hover:shadow-md transition\">\n                  <div className=\"h-48 bg-gray-100\">\n                    {product.image_url ? (\n                      <img \n                        src={product.image_url} \n                        alt={product.name} \n                        className=\"w-full h-full object-cover\"\n                      />\n                    ) : (\n                      <div className=\"w-full h-full bg-lemonade-yellow-light flex items-center justify-center\">\n                        <span className=\"text-lemonade-yellow-dark\">No Image</span>\n                      </div>\n                    )}\n                  </div>\n                  \n                  <Card.Body>\n                    <div className=\"flex justify-between items-start mb-2\">\n                      <h3 className=\"text-xl font-display text-lemonade-blue-dark\">\n                        {product.name}\n                      </h3>\n                      <span className=\"text-lg font-semibold text-lemonade-blue\">\n                        ${product.price.toFixed(2)}\n                      </span>\n                    </div>\n                    \n                    <p className=\"text-gray-600 mb-3 line-clamp-2\">\n                      {product.description || 'No description'}\n                    </p>\n                    \n                    <div className=\"flex justify-between items-center\">\n                      <span className={`px-2 py-1 rounded-full text-xs ${\n                        product.is_available \n                          ? 'bg-green-100 text-green-800' \n                          : 'bg-gray-100 text-gray-800'\n                      }`}>\n                        {product.is_available ? 'Available' : 'Unavailable'}\n                      </span>\n                      \n                      <Link \n                        to={`/seller/stands/${id}/products/${product.id}`}\n                        className=\"text-lemonade-blue hover:underline\"\n                      >\n                        Edit →\n                      </Link>\n                    </div>\n                  </Card.Body>\n                </Card>\n              ))}\n            </div>\n          )}\n        </div>\n      )}\n      \n      {/* Statistics Tab */}\n      {activeTab === 'statistics' && (\n        <div className=\"bg-white rounded-xl shadow-md p-6\">\n          <h2 className=\"text-2xl font-display text-lemonade-blue-dark mb-6\">\n            Visitor Statistics\n          </h2>\n          \n          <StandStatistics statistics={visitorStats} />\n        </div>\n      )}\n      \n      {/* Delete Confirmation Modal */}\n      <Modal\n        isOpen={showDeleteModal}\n        onClose={() => setShowDeleteModal(false)}\n        title=\"Delete Stand\"\n      >\n        <div className=\"p-6\">\n          <p className=\"text-gray-700 mb-6\">\n            Are you sure you want to delete this stand? This action cannot be undone.\n          </p>\n          \n          <div className=\"flex justify-end space-x-3\">\n            <Button\n              variant=\"secondary\"\n              onClick={() => setShowDeleteModal(false)}\n              disabled={deleting}\n            >\n              Cancel\n            </Button>\n            \n            <Button\n              variant=\"danger\"\n              onClick={handleDelete}\n              disabled={deleting}\n            >\n              {deleting ? 'Deleting...' : 'Delete Stand'}\n            </Button>\n          </div>\n        </div>\n      </Modal>\n      \n      {/* Location Map Modal */}\n      {showLocationMap && (\n        <Modal\n          isOpen={showLocationMap}\n          onClose={() => setShowLocationMap(false)}\n          title=\"Adjust Stand Location\"\n          size=\"lg\"\n        >\n          <div className=\"p-6\">\n            <p className=\"mb-4 text-gray-700\">\n              Drag the marker to set your stand's exact location. Click \"Save Location\" when you're done.\n            </p>\n            \n            <div className=\"h-96 mb-4 rounded-lg overflow-hidden\">\n              {mapCenter && (\n                <Map\n                  center={mapCenter}\n                  zoom={15}\n                  height=\"100%\"\n                  showUserLocation={true}\n                >\n                  {/* We're using a custom component here that will be rendered inside the Map */}\n                  <DraggableMarker\n                    position={mapCenter}\n                    onPositionChange={handleMarkerPositionChange}\n                    popupContent={\n                      <div>\n                        <h3 className=\"font-display text-base\">Your Stand Location</h3>\n                        <p className=\"text-sm\">Drag me to adjust!</p>\n                      </div>\n                    }\n                  />\n                </Map>\n              )}\n            </div>\n            \n            <div className=\"grid grid-cols-2 gap-4 mb-4\">\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-1\">Latitude</label>\n                <input\n                  type=\"text\"\n                  className=\"w-full p-2 border border-gray-300 rounded-md\"\n                  value={formData.location_lat}\n                  onChange={(e) => setFormData(prev => ({ ...prev, location_lat: e.target.value }))}\n                />\n              </div>\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-1\">Longitude</label>\n                <input\n                  type=\"text\"\n                  className=\"w-full p-2 border border-gray-300 rounded-md\"\n                  value={formData.location_lng}\n                  onChange={(e) => setFormData(prev => ({ ...prev, location_lng: e.target.value }))}\n                />\n              </div>\n            </div>\n            \n            <div className=\"flex justify-end space-x-3\">\n              <Button\n                variant=\"secondary\"\n                onClick={() => setShowLocationMap(false)}\n              >\n                Cancel\n              </Button>\n              <Button\n                variant=\"primary\"\n                onClick={() => setShowLocationMap(false)}\n              >\n                Save Location\n              </Button>\n            </div>\n          </div>\n        </Modal>\n      )}\n    </div>\n  );\n};\n\nexport default StandDetailPage;"],"names":["StandExpirationInfo","stand","onExtend","loading","setLoading","useState","error","setError","success","setSuccess","timeRemaining","setTimeRemaining","timerRef","useRef","calculateTimeRemaining","expiration_time","now","Date","diffMs","expired","timeString","diffHrs","Math","floor","diffMins","diffSecs","hours","minutes","seconds","critical","useEffect","current","setInterval","newTimeRemaining","clearInterval","handleReopen","async","data","reopenStand","id","Error","message","midnight","setHours","hoursUntilMidnight","round","err","jsxs","className","children","jsx","jsxRuntimeExports","Button","variant","onClick","disabled","size","formatExpirationDate","dateString","toLocaleString","weekday","month","day","hour","minute","expiresLaterToday","expiration","getDate","getMonth","getFullYear","Alert","dismissible","onDismiss","Fragment","StandStatistics","statistics","stats","totalViews","random","uniqueVisitors","averageTimeSpent","popularTimes","viewsByDay","views","maxViews","max","map","Card","Header","Body","index","style","height","minHeight","time","DraggableMarker","position","onPositionChange","popupContent","icon","draggable","markerRef","useMap","markerPosition","setMarkerPosition","eventHandlers","dragend","marker","newPosition","getLatLng","lat","lng","setView","getZoom","Marker","ref","Popup","propTypes","PropTypes","arrayOf","number","isRequired","func","node","instanceOf","L","Icon","bool","StandDetailPage","useParams","navigate","useNavigate","user","useAuth","setStand","products","setProducts","activeTab","setActiveTab","editMode","setEditMode","showLocationMap","setShowLocationMap","mapCenter","setMapCenter","formData","setFormData","name","description","address","location_lat","location_lng","is_active","imageFile","setImageFile","imagePreview","setImagePreview","uploadingImage","setUploadingImage","showDeleteModal","setShowDeleteModal","deleting","setDeleting","visitorStats","setVisitorStats","logger","info","standId","userExists","apiRequest","standData","standError","getStandById","apiError","warn","formattedStandData","parseFloat","apiResponse","standExists","owner_id","standOwnerId","userId","standName","isActive","productsData","productsError","getProducts","productCount","length","fetchStandData","handleInputChange","e","value","type","checked","target","prev","LoadingIndicator","Link","to","window","location","reload","newActiveState","action","currentState","newState","updateStand","updatedStand","Tabs","onChange","tabs","label","Form","onSubmit","preventDefault","hasImageUpdate","trim","imageSize","imageType","uploadError","uploadStandImage","refreshedData","refreshError","src","alt","image_url","Group","Label","htmlFor","Input","accept","file","files","reader","FileReader","onloadend","result","readAsDataURL","Text","Checkbox","required","placeholder","Textarea","rows","step","xmlns","viewBox","fill","fillRule","d","clipRule","created_at","toLocaleDateString","updated_at","product","price","toFixed","is_available","Modal","isOpen","onClose","title","deleteStand","state","Map","center","zoom","showUserLocation"],"mappings":"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"}