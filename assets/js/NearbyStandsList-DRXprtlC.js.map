{"version":3,"file":"NearbyStandsList-DRXprtlC.js","sources":["../../../src/components/map/NearbyStandsList.jsx"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Card, Loader, Button } from '../ui';\nimport { useNearbyStands } from '../../contexts/NearbyStandsContext';\nimport { useGeolocation } from '../../contexts/GeolocationContext';\nimport { formatDistance, getProximityDescription } from '../../services/geolocationService';\n\n/**\n * NearbyStandsList component for displaying stands near the user\n */\nconst NearbyStandsList = ({\n  onStandSelect,\n  className = '',\n  ...props\n}) => {\n  const { nearbyStands, loading, hasLocation, maxDistance, setMaxDistanceFilter } = useNearbyStands();\n  const { getLocation, loading: locationLoading, error: locationError } = useGeolocation();\n\n  // Distance options for the filter\n  const distanceOptions = [\n    { value: '', label: 'Any distance' },\n    { value: '1', label: '1 mile' },\n    { value: '5', label: '5 miles' },\n    { value: '10', label: '10 miles' },\n    { value: '25', label: '25 miles' }\n  ];\n\n  // Handle distance filter change\n  const handleDistanceChange = (e) => {\n    setMaxDistanceFilter(e.target.value);\n  };\n\n  return (\n    <Card className={`h-full flex flex-col ${className}`} {...props}>\n      <Card.Header>\n        <div className=\"flex justify-between items-center\">\n          <h2 className=\"text-xl font-display text-lemonade-blue-dark\">Stands Near You</h2>\n          \n          <select\n            className=\"text-sm border border-gray-300 rounded-md px-2 py-1\"\n            value={maxDistance || ''}\n            onChange={handleDistanceChange}\n            disabled={!hasLocation}\n          >\n            {distanceOptions.map(option => (\n              <option key={option.value} value={option.value}>\n                {option.label}\n              </option>\n            ))}\n          </select>\n        </div>\n      </Card.Header>\n\n      <Card.Body className=\"flex-grow overflow-auto\">\n        {loading || locationLoading ? (\n          <div className=\"flex justify-center items-center h-full\">\n            <Loader variant=\"yellow\" size=\"md\" />\n          </div>\n        ) : !hasLocation ? (\n          <div className=\"flex flex-col items-center justify-center h-full p-4 text-center\">\n            <svg className=\"w-12 h-12 text-gray-400 mb-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z\" />\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15 11a3 3 0 11-6 0 3 3 0 016 0z\" />\n            </svg>\n            <p className=\"text-gray-600 mb-4\">\n              {locationError \n                ? 'Location access was denied. Please enable location services to see stands near you.'\n                : 'Enable location services to see stands near you.'}\n            </p>\n            <Button \n              variant=\"primary\" \n              onClick={getLocation}\n              disabled={locationLoading}\n            >\n              {locationLoading ? 'Getting Location...' : 'Enable Location'}\n            </Button>\n          </div>\n        ) : nearbyStands.length === 0 ? (\n          <div className=\"flex flex-col items-center justify-center h-full p-4 text-center\">\n            <svg className=\"w-12 h-12 text-gray-400 mb-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9.172 16.172a4 4 0 015.656 0M9 10h.01M15 10h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\n            </svg>\n            <p className=\"text-gray-600\">\n              {maxDistance \n                ? `No stands found within ${maxDistance} miles of your location.` \n                : 'No stands found near your location.'}\n            </p>\n          </div>\n        ) : (\n          <div className=\"space-y-4 p-2\">\n            {nearbyStands.map(stand => (\n              <div \n                key={stand.id}\n                className=\"p-4 bg-lemonade-yellow-light rounded-lg cursor-pointer hover:bg-lemonade-yellow-dark transition-colors\"\n                onClick={() => onStandSelect(stand)}\n              >\n                <div className=\"flex justify-between items-start\">\n                  <h3 className=\"font-display text-lg\">{stand.name}</h3>\n                  {stand.distance !== null && (\n                    <span className=\"text-xs bg-white px-2 py-1 rounded-full\">\n                      {stand.distance.toFixed(1)} miles\n                    </span>\n                  )}\n                </div>\n                \n                <p className=\"text-sm text-gray-700 line-clamp-2\">{stand.description}</p>\n                \n                <div className=\"flex justify-between items-center mt-2\">\n                  <p className=\"text-xs text-gray-600\">{stand.address}</p>\n                  <span className=\"text-xs font-medium text-lemonade-blue-dark\">\n                    {getProximityDescription(stand.distance)}\n                  </span>\n                </div>\n              </div>\n            ))}\n          </div>\n        )}\n      </Card.Body>\n\n      <Card.Footer>\n        <p className=\"text-sm text-gray-600\">\n          {hasLocation && (\n            nearbyStands.length > 0 \n              ? `${nearbyStands.length} ${nearbyStands.length === 1 ? 'stand' : 'stands'} found${maxDistance ? ` within ${maxDistance} miles` : ''}`\n              : 'No stands found'\n          )}\n        </p>\n      </Card.Footer>\n    </Card>\n  );\n};\n\nNearbyStandsList.propTypes = {\n  onStandSelect: PropTypes.func.isRequired,\n  className: PropTypes.string\n};\n\nexport default NearbyStandsList;"],"names":["NearbyStandsList","onStandSelect","className","props","nearbyStands","loading","hasLocation","maxDistance","setMaxDistanceFilter","useNearbyStands","getLocation","locationLoading","error","locationError","useGeolocation","Card","children","Header","jsx","jsxRuntimeExports","value","onChange","e","target","disabled","label","map","option","Body","Loader","variant","size","length","fill","stroke","viewBox","xmlns","strokeLinecap","strokeLinejoin","strokeWidth","d","stand","jsxs","onClick","name","distance","toFixed","description","address","getProximityDescription","id","Button","Footer","propTypes","PropTypes","func","isRequired","string"],"mappings":"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"}