{"version":3,"file":"ProfilePage-D8UpxOtp.js","sources":["../../../src/pages/ProfilePage.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Helmet } from 'react-helmet';\nimport { useNavigate } from 'react-router-dom';\nimport { \n  Card, \n  Form, \n  Button, \n  Alert, \n  Avatar, \n  Tabs, \n  Toggle,\n  Loader\n} from '../components/ui';\nimport { \n  getUserProfile, \n  updateUserProfile, \n  updateUserAddress,\n  uploadUserAvatar,\n  updateUserPreferences\n} from '../api/supabaseApi';\nimport { useAuth } from '../contexts/AuthContext';\nimport { validateProfileForm, validateAddressForm } from '../utils/validation';\n\n// US States for dropdown\nconst US_STATES = [\n  { value: 'AL', label: 'Alabama' },\n  { value: 'AK', label: 'Alaska' },\n  { value: 'AZ', label: 'Arizona' },\n  { value: 'AR', label: 'Arkansas' },\n  { value: 'CA', label: 'California' },\n  { value: 'CO', label: 'Colorado' },\n  { value: 'CT', label: 'Connecticut' },\n  { value: 'DE', label: 'Delaware' },\n  { value: 'FL', label: 'Florida' },\n  { value: 'GA', label: 'Georgia' },\n  { value: 'HI', label: 'Hawaii' },\n  { value: 'ID', label: 'Idaho' },\n  { value: 'IL', label: 'Illinois' },\n  { value: 'IN', label: 'Indiana' },\n  { value: 'IA', label: 'Iowa' },\n  { value: 'KS', label: 'Kansas' },\n  { value: 'KY', label: 'Kentucky' },\n  { value: 'LA', label: 'Louisiana' },\n  { value: 'ME', label: 'Maine' },\n  { value: 'MD', label: 'Maryland' },\n  { value: 'MA', label: 'Massachusetts' },\n  { value: 'MI', label: 'Michigan' },\n  { value: 'MN', label: 'Minnesota' },\n  { value: 'MS', label: 'Mississippi' },\n  { value: 'MO', label: 'Missouri' },\n  { value: 'MT', label: 'Montana' },\n  { value: 'NE', label: 'Nebraska' },\n  { value: 'NV', label: 'Nevada' },\n  { value: 'NH', label: 'New Hampshire' },\n  { value: 'NJ', label: 'New Jersey' },\n  { value: 'NM', label: 'New Mexico' },\n  { value: 'NY', label: 'New York' },\n  { value: 'NC', label: 'North Carolina' },\n  { value: 'ND', label: 'North Dakota' },\n  { value: 'OH', label: 'Ohio' },\n  { value: 'OK', label: 'Oklahoma' },\n  { value: 'OR', label: 'Oregon' },\n  { value: 'PA', label: 'Pennsylvania' },\n  { value: 'RI', label: 'Rhode Island' },\n  { value: 'SC', label: 'South Carolina' },\n  { value: 'SD', label: 'South Dakota' },\n  { value: 'TN', label: 'Tennessee' },\n  { value: 'TX', label: 'Texas' },\n  { value: 'UT', label: 'Utah' },\n  { value: 'VT', label: 'Vermont' },\n  { value: 'VA', label: 'Virginia' },\n  { value: 'WA', label: 'Washington' },\n  { value: 'WV', label: 'West Virginia' },\n  { value: 'WI', label: 'Wisconsin' },\n  { value: 'WY', label: 'Wyoming' },\n  { value: 'DC', label: 'District of Columbia' },\n];\n\n// Countries for dropdown\nconst COUNTRIES = [\n  { value: 'United States', label: 'United States' },\n  { value: 'Canada', label: 'Canada' },\n  { value: 'Mexico', label: 'Mexico' },\n  { value: 'United Kingdom', label: 'United Kingdom' },\n  { value: 'Australia', label: 'Australia' },\n  { value: 'Other', label: 'Other' }\n];\n\n/**\n * User Profile Page\n */\nconst ProfilePage = () => {\n  const { user, isAuthenticated } = useAuth();\n  const navigate = useNavigate();\n  \n  const [activeTab, setActiveTab] = useState('personal');\n  const [loading, setLoading] = useState(true);\n  const [saving, setSaving] = useState(false);\n  const [error, setError] = useState(null);\n  const [success, setSuccess] = useState(null);\n  const [avatarFile, setAvatarFile] = useState(null);\n  const [avatarPreview, setAvatarPreview] = useState(null);\n  \n  // Form data\n  const [profileData, setProfileData] = useState({\n    full_name: '',\n    email: '',\n    phone: '',\n    bio: ''\n  });\n  \n  const [addressData, setAddressData] = useState({\n    street: '',\n    city: '',\n    state: '',\n    postalCode: '',\n    country: 'United States',\n    apt_suite: '',\n    address_line2: '',\n    useForSearch: false\n  });\n  \n  // Form validation errors\n  const [profileErrors, setProfileErrors] = useState({});\n  const [addressErrors, setAddressErrors] = useState({});\n  \n  // Load user profile data\n  useEffect(() => {\n    if (!isAuthenticated) {\n      navigate('/login', { state: { from: '/profile' } });\n      return;\n    }\n    \n    const loadUserProfile = async () => {\n      try {\n        setLoading(true);\n        const { data, error } = await getUserProfile(user.id);\n        \n        if (error) {\n          throw new Error(error.message);\n        }\n        \n        if (data) {\n          // Set profile data\n          setProfileData({\n            full_name: data.full_name || '',\n            email: user.email || '',\n            phone: data.phone || '',\n            bio: data.bio || ''\n          });\n          \n          // Set address data\n          setAddressData({\n            street: data.street || '',\n            city: data.city || '',\n            state: data.state || '',\n            postalCode: data.postal_code || '',\n            country: data.country || 'United States',\n            apt_suite: data.apt_suite || '',\n            address_line2: data.address_line2 || '',\n            useForSearch: data.preferences?.defaultSearchLocation?.useForSearch || false\n          });\n          \n          // Set avatar preview if exists\n          if (data.avatar_url) {\n            setAvatarPreview(data.avatar_url);\n          }\n        }\n      } catch (err) {\n        setError(err.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    \n    loadUserProfile();\n  }, [isAuthenticated, navigate, user]);\n  \n  // Handle profile form changes\n  const handleProfileChange = (e) => {\n    const { name, value } = e.target;\n    setProfileData(prev => ({\n      ...prev,\n      [name]: value\n    }));\n    \n    // Clear error for this field if it exists\n    if (profileErrors[name]) {\n      setProfileErrors(prev => ({\n        ...prev,\n        [name]: null\n      }));\n    }\n  };\n  \n  // Handle address form changes\n  const handleAddressChange = (e) => {\n    const { name, value } = e.target;\n    setAddressData(prev => ({\n      ...prev,\n      [name]: value\n    }));\n    \n    // Clear error for this field if it exists\n    if (addressErrors[name]) {\n      setAddressErrors(prev => ({\n        ...prev,\n        [name]: null\n      }));\n    }\n  };\n  \n  // Handle toggle for using address as search location\n  const handleToggleUseForSearch = (value) => {\n    setAddressData(prev => ({\n      ...prev,\n      useForSearch: value\n    }));\n  };\n  \n  // Handle avatar upload\n  const handleAvatarChange = (e) => {\n    const file = e.target.files[0];\n    if (!file) return;\n    \n    // Validate file type and size\n    const validTypes = ['image/jpeg', 'image/png', 'image/gif', 'image/webp'];\n    const maxSize = 5 * 1024 * 1024; // 5MB\n    \n    if (!validTypes.includes(file.type)) {\n      setError('Please upload a valid image file (JPEG, PNG, GIF, or WebP)');\n      return;\n    }\n    \n    if (file.size > maxSize) {\n      setError('Image file is too large. Maximum size is 5MB.');\n      return;\n    }\n    \n    // Create preview\n    const reader = new FileReader();\n    reader.onloadend = () => {\n      setAvatarPreview(reader.result);\n    };\n    reader.readAsDataURL(file);\n    \n    // Store file for upload\n    setAvatarFile(file);\n    setError(null);\n  };\n  \n  // Handle profile form submission\n  const handleProfileSubmit = async (e) => {\n    e.preventDefault();\n    \n    // Validate form\n    const errors = validateProfileForm(profileData);\n    setProfileErrors(errors);\n    \n    if (Object.keys(errors).length > 0) {\n      return;\n    }\n    \n    try {\n      setSaving(true);\n      setError(null);\n      setSuccess(null);\n      \n      // Update profile\n      const { error: profileError } = await updateUserProfile(user.id, {\n        full_name: profileData.full_name,\n        phone: profileData.phone,\n        bio: profileData.bio\n      });\n      \n      if (profileError) {\n        throw new Error(profileError.message);\n      }\n      \n      // Upload avatar if changed\n      if (avatarFile) {\n        const { error: avatarError } = await uploadUserAvatar(user.id, avatarFile);\n        \n        if (avatarError) {\n          throw new Error(avatarError.message);\n        }\n      }\n      \n      setSuccess('Profile updated successfully!');\n      \n      // Clear avatar file after successful upload\n      setAvatarFile(null);\n    } catch (err) {\n      setError(err.message);\n    } finally {\n      setSaving(false);\n    }\n  };\n  \n  // Handle address form submission\n  const handleAddressSubmit = async (e) => {\n    e.preventDefault();\n    \n    // Validate form\n    const errors = validateAddressForm(addressData);\n    setAddressErrors(errors);\n    \n    if (Object.keys(errors).length > 0) {\n      return;\n    }\n    \n    try {\n      setSaving(true);\n      setError(null);\n      setSuccess(null);\n      \n      // Update address\n      const { error: addressError } = await updateUserAddress(user.id, addressData);\n      \n      if (addressError) {\n        throw new Error(addressError.message);\n      }\n      \n      setSuccess('Address updated successfully!');\n    } catch (err) {\n      setError(err.message);\n    } finally {\n      setSaving(false);\n    }\n  };\n  \n  // Loading state\n  if (loading) {\n    return (\n      <div className=\"flex items-center justify-center min-h-[60vh]\">\n        <Loader size=\"lg\" variant=\"yellow\" message=\"Loading your profile...\" />\n      </div>\n    );\n  }\n  \n  return (\n    <div className=\"py-12 px-4 sm:px-6 lg:px-8 bg-gradient-to-b from-lemonade-yellow-light to-white\">\n      <Helmet>\n        <title>My Profile | Lemonade Map</title>\n        <meta name=\"description\" content=\"Update your Lemonade Map profile and preferences\" />\n      </Helmet>\n      \n      <div className=\"max-w-4xl mx-auto\">\n        <div className=\"text-center mb-8\">\n          <h1 className=\"text-4xl font-display text-lemonade-blue-dark mb-4\">My Lemonade Profile</h1>\n          <div className=\"w-24 h-2 bg-lemonade-yellow mx-auto rounded-full mb-6\"></div>\n          <p className=\"text-lg text-gray-600 max-w-2xl mx-auto\">\n            Customize your profile and preferences to get the most out of your Lemonade Map experience!\n          </p>\n        </div>\n        \n        {/* Profile Card with Tabs */}\n        <Card className=\"shadow-playful-lg overflow-hidden\">\n          <div className=\"bg-lemonade-blue-light p-6 flex flex-col items-center\">\n            <div className=\"relative group\">\n              <Avatar \n                src={avatarPreview} \n                alt={profileData.full_name || 'User'} \n                size=\"xl\"\n                className=\"border-4 border-white shadow-lg\"\n              />\n              <div className=\"absolute inset-0 flex items-center justify-center bg-black bg-opacity-50 rounded-full opacity-0 group-hover:opacity-100 transition-opacity cursor-pointer\">\n                <label htmlFor=\"avatar-upload\" className=\"text-white text-sm font-medium cursor-pointer\">\n                  Change\n                </label>\n                <input \n                  id=\"avatar-upload\" \n                  type=\"file\" \n                  accept=\"image/*\" \n                  className=\"hidden\" \n                  onChange={handleAvatarChange}\n                />\n              </div>\n            </div>\n            <h2 className=\"mt-4 text-2xl font-display text-lemonade-blue-dark\">\n              {profileData.full_name || 'Your Profile'}\n            </h2>\n            <p className=\"text-lemonade-blue-dark opacity-75\">{profileData.email}</p>\n          </div>\n          \n          <Card.Body className=\"px-6 pt-4\">\n            {error && (\n              <Alert \n                type=\"error\" \n                message={error} \n                className=\"mb-6\"\n                onClose={() => setError(null)}\n              />\n            )}\n            \n            {success && (\n              <Alert \n                type=\"success\" \n                message={success} \n                className=\"mb-6\"\n                onClose={() => setSuccess(null)}\n              />\n            )}\n            \n            <Tabs\n              defaultTab={activeTab === 'address' ? 1 : 0}\n              onChange={(index) => setActiveTab(index === 0 ? 'personal' : 'address')}\n              className=\"mb-6\"\n            >\n              <Tabs.Item>Personal Info</Tabs.Item>\n              <Tabs.Item>Address</Tabs.Item>\n              \n              <Tabs.Panel>\n                <Form onSubmit={handleProfileSubmit}>\n                  <div className=\"space-y-6\">\n                    <Form.Group>\n                      <Form.Label htmlFor=\"full_name\" required>Full Name</Form.Label>\n                      <Form.Input\n                        id=\"full_name\"\n                        name=\"full_name\"\n                        value={profileData.full_name}\n                        onChange={handleProfileChange}\n                        placeholder=\"Your full name\"\n                        error={profileErrors.full_name}\n                      />\n                    </Form.Group>\n                    \n                    <Form.Group>\n                      <Form.Label htmlFor=\"email\">Email Address</Form.Label>\n                      <Form.Input\n                        id=\"email\"\n                        name=\"email\"\n                        type=\"email\"\n                        value={profileData.email}\n                        disabled\n                        className=\"bg-gray-100\"\n                      />\n                      <Form.Text>Email cannot be changed. Contact support if needed.</Form.Text>\n                    </Form.Group>\n                    \n                    <Form.Group>\n                      <Form.Label htmlFor=\"phone\">Phone Number</Form.Label>\n                      <Form.Input\n                        id=\"phone\"\n                        name=\"phone\"\n                        value={profileData.phone}\n                        onChange={handleProfileChange}\n                        placeholder=\"Your phone number (optional)\"\n                        error={profileErrors.phone}\n                      />\n                    </Form.Group>\n                    \n                    <Form.Group>\n                      <Form.Label htmlFor=\"bio\">Bio</Form.Label>\n                      <Form.Textarea\n                        id=\"bio\"\n                        name=\"bio\"\n                        value={profileData.bio}\n                        onChange={handleProfileChange}\n                        placeholder=\"Tell us a bit about yourself...\"\n                        rows={4}\n                        error={profileErrors.bio}\n                      />\n                    </Form.Group>\n                    \n                    <div className=\"flex justify-end\">\n                      <Button\n                        type=\"submit\"\n                        variant=\"primary\"\n                        size=\"lg\"\n                        disabled={saving}\n                      >\n                        {saving ? (\n                          <>\n                            <Loader size=\"sm\" variant=\"white\" className=\"mr-2\" />\n                            Saving...\n                          </>\n                        ) : (\n                          'Save Profile'\n                        )}\n                      </Button>\n                    </div>\n                  </div>\n                </Form>\n              </Tabs.Panel>\n              \n              <Tabs.Panel>\n                <Form onSubmit={handleAddressSubmit}>\n                  <div className=\"space-y-6\">\n                    <Form.Group>\n                      <Form.Label htmlFor=\"street\">Street Address</Form.Label>\n                      <Form.Input\n                        id=\"street\"\n                        name=\"street\"\n                        value={addressData.street}\n                        onChange={handleAddressChange}\n                        placeholder=\"123 Main St\"\n                        error={addressErrors.street}\n                      />\n                    </Form.Group>\n                    \n                    <Form.Group>\n                      <Form.Label htmlFor=\"apt_suite\">Apartment/Suite</Form.Label>\n                      <Form.Input\n                        id=\"apt_suite\"\n                        name=\"apt_suite\"\n                        value={addressData.apt_suite}\n                        onChange={handleAddressChange}\n                        placeholder=\"Apt 4B\"\n                        error={addressErrors.apt_suite}\n                    />\n                  </Form.Group>\n                  \n                  <Form.Group>\n                    <Form.Label htmlFor=\"address_line2\">Address Line 2</Form.Label>\n                    <Form.Input\n                      id=\"address_line2\"\n                      name=\"address_line2\"\n                      value={addressData.address_line2}\n                      onChange={handleAddressChange}\n                      placeholder=\"Building name, Floor, etc.\"\n                      error={addressErrors.address_line2}\n                    />\n                  </Form.Group>\n                  \n                  <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                    <Form.Group>\n                      <Form.Label htmlFor=\"city\">City</Form.Label>\n                      <Form.Input\n                        id=\"city\"\n                        name=\"city\"\n                        value={addressData.city}\n                        onChange={handleAddressChange}\n                        placeholder=\"Your city\"\n                        error={addressErrors.city}\n                      />\n                    </Form.Group>\n                    \n                    <Form.Group>\n                      <Form.Label htmlFor=\"state\">State/Province</Form.Label>\n                      <Form.Select\n                        id=\"state\"\n                        name=\"state\"\n                        value={addressData.state}\n                        onChange={handleAddressChange}\n                        options={US_STATES}\n                        placeholder=\"Select state\"\n                        error={addressErrors.state}\n                      />\n                    </Form.Group>\n                  </div>\n                  \n                  <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                    <Form.Group>\n                      <Form.Label htmlFor=\"postalCode\">ZIP/Postal Code</Form.Label>\n                      <Form.Input\n                        id=\"postalCode\"\n                        name=\"postalCode\"\n                        value={addressData.postalCode}\n                        onChange={handleAddressChange}\n                        placeholder=\"12345\"\n                        error={addressErrors.postalCode}\n                      />\n                    </Form.Group>\n                    \n                    <Form.Group>\n                      <Form.Label htmlFor=\"country\">Country</Form.Label>\n                      <Form.Select\n                        id=\"country\"\n                        name=\"country\"\n                        value={addressData.country}\n                        onChange={handleAddressChange}\n                        options={COUNTRIES}\n                        error={addressErrors.country}\n                      />\n                    </Form.Group>\n                  </div>\n                  \n                  <div className=\"bg-lemonade-yellow-light p-4 rounded-lg border border-lemonade-yellow\">\n                    <div className=\"flex items-center justify-between\">\n                      <div>\n                        <h3 className=\"font-display text-lemonade-blue-dark text-lg\">Use as Default Search Location</h3>\n                        <p className=\"text-sm text-gray-600\">\n                          When enabled, we'll use this address as your default location when searching for lemonade stands.\n                        </p>\n                      </div>\n                      <Toggle\n                        checked={addressData.useForSearch}\n                        onChange={handleToggleUseForSearch}\n                        label=\"\"\n                        srLabel=\"Use address as default search location\"\n                      />\n                    </div>\n                  </div>\n                  \n                  <div className=\"flex justify-end\">\n                    <Button\n                      type=\"submit\"\n                      variant=\"primary\"\n                      size=\"lg\"\n                      disabled={saving}\n                    >\n                      {saving ? (\n                        <>\n                          <Loader size=\"sm\" variant=\"white\" className=\"mr-2\" />\n                          Saving...\n                        </>\n                      ) : (\n                        'Save Address'\n                      )}\n                    </Button>\n                  </div>\n                </div>\n              </Form>\n            </Tabs.Panel>\n            </Tabs>\n          </Card.Body>\n        </Card>\n        \n        {/* Fun decorative elements */}\n        <div className=\"relative mt-12\">\n          <div className=\"absolute -top-16 -left-8 w-16 h-16 text-lemonade-yellow opacity-30 transform rotate-12\">\n            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"currentColor\">\n              <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8zm-5-9h10v2H7z\"/>\n            </svg>\n          </div>\n          <div className=\"absolute -bottom-8 -right-8 w-20 h-20 text-lemonade-pink opacity-20 transform -rotate-12\">\n            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"currentColor\">\n              <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8zm-5-9h10v2H7z\"/>\n            </svg>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ProfilePage;"],"names":["US_STATES","value","label","COUNTRIES","ProfilePage","user","isAuthenticated","useAuth","navigate","useNavigate","activeTab","setActiveTab","useState","loading","setLoading","saving","setSaving","error","setError","success","setSuccess","avatarFile","setAvatarFile","avatarPreview","setAvatarPreview","profileData","setProfileData","full_name","email","phone","bio","addressData","setAddressData","street","city","state","postalCode","country","apt_suite","address_line2","useForSearch","profileErrors","setProfileErrors","addressErrors","setAddressErrors","useEffect","from","async","data","getUserProfile","id","Error","message","postal_code","_b","_a","preferences","defaultSearchLocation","avatar_url","err","loadUserProfile","handleProfileChange","e","name","target","prev","handleAddressChange","jsx","className","children","Loader","size","variant","jsxs","Helmet","content","Card","jsxRuntimeExports","Avatar","src","alt","htmlFor","type","accept","onChange","file","files","includes","reader","FileReader","onloadend","result","readAsDataURL","Body","Alert","onClose","Tabs","defaultTab","index","Item","Panel","Form","onSubmit","preventDefault","errors","validateProfileForm","Object","keys","length","profileError","updateUserProfile","avatarError","uploadUserAvatar","Group","Label","required","Input","placeholder","disabled","Text","Textarea","rows","Button","Fragment","validateAddressForm","addressError","updateUserAddress","Select","options","Toggle","checked","srLabel","xmlns","viewBox","fill","d"],"mappings":"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"}